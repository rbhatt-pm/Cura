<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<struct type='{_addr_pair=&quot;ap_lower&quot;i&quot;ap_upper&quot;i}' name='PyAddrPair'/>
<struct type='{_PyBaseExceptionObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}}' name='PyBaseExceptionObject' type64='{_PyBaseExceptionObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}}'/>
<struct type='{_PyBoolObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_ival&quot;l}' name='PyBoolObject' type64='{_PyBoolObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_ival&quot;q}'/>
<struct type='{_PyBufferProcs=&quot;bf_getreadbuffer&quot;^?&quot;bf_getwritebuffer&quot;^?&quot;bf_getsegcount&quot;^?&quot;bf_getcharbuffer&quot;^?&quot;bf_getbuffer&quot;^?&quot;bf_releasebuffer&quot;^?}' name='PyBufferProcs'/>
<struct type='{_PyByteArrayObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;ob_exports&quot;i&quot;ob_alloc&quot;i&quot;ob_bytes&quot;*}' name='PyByteArrayObject' type64='{_PyByteArrayObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;ob_exports&quot;i&quot;ob_alloc&quot;q&quot;ob_bytes&quot;*}'/>
<struct type='{_PyCFunctionObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;m_ml&quot;^{PyMethodDef}&quot;m_self&quot;^{_object}&quot;m_module&quot;^{_object}}' name='PyCFunctionObject' type64='{_PyCFunctionObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;m_ml&quot;^{PyMethodDef}&quot;m_self&quot;^{_object}&quot;m_module&quot;^{_object}}'/>
<struct type='{_PyCObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;cobject&quot;^v&quot;desc&quot;^v&quot;destructor&quot;^?}' name='PyCObject' type64='{_PyCObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;cobject&quot;^v&quot;desc&quot;^v&quot;destructor&quot;^?}'/>
<struct type='{_PyCellObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_ref&quot;^{_object}}' name='PyCellObject' type64='{_PyCellObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_ref&quot;^{_object}}'/>
<struct type='{_PyClassObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;cl_bases&quot;^{_object}&quot;cl_dict&quot;^{_object}&quot;cl_name&quot;^{_object}&quot;cl_getattr&quot;^{_object}&quot;cl_setattr&quot;^{_object}&quot;cl_delattr&quot;^{_object}&quot;cl_weakreflist&quot;^{_object}}' name='PyClassObject' type64='{_PyClassObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;cl_bases&quot;^{_object}&quot;cl_dict&quot;^{_object}&quot;cl_name&quot;^{_object}&quot;cl_getattr&quot;^{_object}&quot;cl_setattr&quot;^{_object}&quot;cl_delattr&quot;^{_object}&quot;cl_weakreflist&quot;^{_object}}'/>
<struct type='{_PyCodeObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;co_argcount&quot;i&quot;co_nlocals&quot;i&quot;co_stacksize&quot;i&quot;co_flags&quot;i&quot;co_code&quot;^{_object}&quot;co_consts&quot;^{_object}&quot;co_names&quot;^{_object}&quot;co_varnames&quot;^{_object}&quot;co_freevars&quot;^{_object}&quot;co_cellvars&quot;^{_object}&quot;co_filename&quot;^{_object}&quot;co_name&quot;^{_object}&quot;co_firstlineno&quot;i&quot;co_lnotab&quot;^{_object}&quot;co_zombieframe&quot;^v&quot;co_weakreflist&quot;^{_object}}' name='PyCodeObject' type64='{_PyCodeObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;co_argcount&quot;i&quot;co_nlocals&quot;i&quot;co_stacksize&quot;i&quot;co_flags&quot;i&quot;co_code&quot;^{_object}&quot;co_consts&quot;^{_object}&quot;co_names&quot;^{_object}&quot;co_varnames&quot;^{_object}&quot;co_freevars&quot;^{_object}&quot;co_cellvars&quot;^{_object}&quot;co_filename&quot;^{_object}&quot;co_name&quot;^{_object}&quot;co_firstlineno&quot;i&quot;co_lnotab&quot;^{_object}&quot;co_zombieframe&quot;^v&quot;co_weakreflist&quot;^{_object}}'/>
<struct type='{_PyCompilerFlags=&quot;cf_flags&quot;i}' name='PyCompilerFlags'/>
<struct type='{_PyComplexObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;cval&quot;{_Py_complex=&quot;real&quot;d&quot;imag&quot;d}}' name='PyComplexObject' type64='{_PyComplexObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;cval&quot;{_Py_complex=&quot;real&quot;d&quot;imag&quot;d}}'/>
<struct type='{_PyCursesWindowObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;win&quot;^{_win_st}}' name='PyCursesWindowObject' type64='{_PyCursesWindowObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;win&quot;^{_win_st}}'/>
<struct type='{_PyDateTime_CAPI=&quot;DateType&quot;^{_typeobject}&quot;DateTimeType&quot;^{_typeobject}&quot;TimeType&quot;^{_typeobject}&quot;DeltaType&quot;^{_typeobject}&quot;TZInfoType&quot;^{_typeobject}&quot;Date_FromDate&quot;^?&quot;DateTime_FromDateAndTime&quot;^?&quot;Time_FromTime&quot;^?&quot;Delta_FromDelta&quot;^?&quot;DateTime_FromTimestamp&quot;^?&quot;Date_FromTimestamp&quot;^?}' name='PyDateTime_CAPI'/>
<struct type='{_PyDateTime_Date=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;l&quot;hastzinfo&quot;c&quot;data&quot;[4C]}' name='PyDateTime_Date' type64='{_PyDateTime_Date=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;q&quot;hastzinfo&quot;c&quot;data&quot;[4C]}'/>
<struct type='{_PyDateTime_DateTime=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;l&quot;hastzinfo&quot;c&quot;data&quot;[10C]&quot;tzinfo&quot;^{_object}}' name='PyDateTime_DateTime' type64='{_PyDateTime_DateTime=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;q&quot;hastzinfo&quot;c&quot;data&quot;[10C]&quot;tzinfo&quot;^{_object}}'/>
<struct type='{_PyDateTime_Delta=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;l&quot;days&quot;i&quot;seconds&quot;i&quot;microseconds&quot;i}' name='PyDateTime_Delta' type64='{_PyDateTime_Delta=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;q&quot;days&quot;i&quot;seconds&quot;i&quot;microseconds&quot;i}'/>
<struct type='{_PyDateTime_TZInfo=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}' name='PyDateTime_TZInfo' type64='{_PyDateTime_TZInfo=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}'/>
<struct type='{_PyDateTime_Time=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;l&quot;hastzinfo&quot;c&quot;data&quot;[6C]&quot;tzinfo&quot;^{_object}}' name='PyDateTime_Time' type64='{_PyDateTime_Time=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;hashcode&quot;q&quot;hastzinfo&quot;c&quot;data&quot;[6C]&quot;tzinfo&quot;^{_object}}'/>
<struct type='{_PyDescrObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}}' name='PyDescrObject' type64='{_PyDescrObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}}'/>
<struct type='{_PyDictEntry=&quot;me_hash&quot;i&quot;me_key&quot;^{_object}&quot;me_value&quot;^{_object}}' name='PyDictEntry' type64='{_PyDictEntry=&quot;me_hash&quot;q&quot;me_key&quot;^{_object}&quot;me_value&quot;^{_object}}'/>
<struct type='{_PyDictEntry=&quot;me_hash&quot;i&quot;me_key&quot;^{_object}&quot;me_value&quot;^{_object}}' name='PyDictObject' type64='{_PyDictEntry=&quot;me_hash&quot;q&quot;me_key&quot;^{_object}&quot;me_value&quot;^{_object}}'/>
<struct type='{_PyEnvironmentErrorObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;myerrno&quot;^{_object}&quot;strerror&quot;^{_object}&quot;filename&quot;^{_object}}' name='PyEnvironmentErrorObject' type64='{_PyEnvironmentErrorObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;myerrno&quot;^{_object}&quot;strerror&quot;^{_object}&quot;filename&quot;^{_object}}'/>
<struct type='{_PyFileObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;f_fp&quot;^{__sFILE}&quot;f_name&quot;^{_object}&quot;f_mode&quot;^{_object}&quot;f_close&quot;^?&quot;f_softspace&quot;i&quot;f_binary&quot;i&quot;f_buf&quot;*&quot;f_bufend&quot;*&quot;f_bufptr&quot;*&quot;f_setbuf&quot;*&quot;f_univ_newline&quot;i&quot;f_newlinetypes&quot;i&quot;f_skipnextlf&quot;i&quot;f_encoding&quot;^{_object}&quot;f_errors&quot;^{_object}&quot;weakreflist&quot;^{_object}&quot;unlocked_count&quot;i&quot;readable&quot;i&quot;writable&quot;i}' name='PyFileObject' type64='{_PyFileObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;f_fp&quot;^{__sFILE}&quot;f_name&quot;^{_object}&quot;f_mode&quot;^{_object}&quot;f_close&quot;^?&quot;f_softspace&quot;i&quot;f_binary&quot;i&quot;f_buf&quot;*&quot;f_bufend&quot;*&quot;f_bufptr&quot;*&quot;f_setbuf&quot;*&quot;f_univ_newline&quot;i&quot;f_newlinetypes&quot;i&quot;f_skipnextlf&quot;i&quot;f_encoding&quot;^{_object}&quot;f_errors&quot;^{_object}&quot;weakreflist&quot;^{_object}&quot;unlocked_count&quot;i&quot;readable&quot;i&quot;writable&quot;i}'/>
<struct type='{_PyFloatObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_fval&quot;d}' name='PyFloatObject' type64='{_PyFloatObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_fval&quot;d}'/>
<struct type='{_PyTryBlock=&quot;b_type&quot;i&quot;b_handler&quot;i&quot;b_level&quot;i}' name='PyFrameObject'/>
<struct type='{_PyFunctionObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;func_code&quot;^{_object}&quot;func_globals&quot;^{_object}&quot;func_defaults&quot;^{_object}&quot;func_closure&quot;^{_object}&quot;func_doc&quot;^{_object}&quot;func_name&quot;^{_object}&quot;func_dict&quot;^{_object}&quot;func_weakreflist&quot;^{_object}&quot;func_module&quot;^{_object}}' name='PyFunctionObject' type64='{_PyFunctionObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;func_code&quot;^{_object}&quot;func_globals&quot;^{_object}&quot;func_defaults&quot;^{_object}&quot;func_closure&quot;^{_object}&quot;func_doc&quot;^{_object}&quot;func_name&quot;^{_object}&quot;func_dict&quot;^{_object}&quot;func_weakreflist&quot;^{_object}&quot;func_module&quot;^{_object}}'/>
<struct type='{_PyFutureFeatures=&quot;ff_features&quot;i&quot;ff_lineno&quot;i}' name='PyFutureFeatures'/>
<struct type='{_PyGenObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;gi_frame&quot;^{_frame}&quot;gi_running&quot;i&quot;gi_code&quot;^{_object}&quot;gi_weakreflist&quot;^{_object}}' name='PyGenObject' type64='{_PyGenObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;gi_frame&quot;^{_frame}&quot;gi_running&quot;i&quot;gi_code&quot;^{_object}&quot;gi_weakreflist&quot;^{_object}}'/>
<struct type='{PyGetSetDef=&quot;name&quot;*&quot;get&quot;^?&quot;set&quot;^?&quot;doc&quot;*&quot;closure&quot;^v}' name='PyGetSetDef'/>
<struct type='{_PyGetSetDescrObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_getset&quot;^{PyGetSetDef}}' name='PyGetSetDescrObject' type64='{_PyGetSetDescrObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_getset&quot;^{PyGetSetDef}}'/>
<struct type='{_heaptypeobject=&quot;ht_type&quot;{_typeobject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;tp_name&quot;*&quot;tp_basicsize&quot;i&quot;tp_itemsize&quot;i&quot;tp_dealloc&quot;^?&quot;tp_print&quot;^?&quot;tp_getattr&quot;^?&quot;tp_setattr&quot;^?&quot;tp_compare&quot;^?&quot;tp_repr&quot;^?&quot;tp_as_number&quot;^{_PyNumberMethods=&quot;nb_add&quot;^?&quot;nb_subtract&quot;^?&quot;nb_multiply&quot;^?&quot;nb_divide&quot;^?&quot;nb_remainder&quot;^?&quot;nb_divmod&quot;^?&quot;nb_power&quot;^?&quot;nb_negative&quot;^?&quot;nb_positive&quot;^?&quot;nb_absolute&quot;^?&quot;nb_nonzero&quot;^?&quot;nb_invert&quot;^?&quot;nb_lshift&quot;^?&quot;nb_rshift&quot;^?&quot;nb_and&quot;^?&quot;nb_xor&quot;^?&quot;nb_or&quot;^?&quot;nb_coerce&quot;^?&quot;nb_int&quot;^?&quot;nb_long&quot;^?&quot;nb_float&quot;^?&quot;nb_oct&quot;^?&quot;nb_hex&quot;^?&quot;nb_inplace_add&quot;^?&quot;nb_inplace_subtract&quot;^?&quot;nb_inplace_multiply&quot;^?&quot;nb_inplace_divide&quot;^?&quot;nb_inplace_remainder&quot;^?&quot;nb_inplace_power&quot;^?&quot;nb_inplace_lshift&quot;^?&quot;nb_inplace_rshift&quot;^?&quot;nb_inplace_and&quot;^?&quot;nb_inplace_xor&quot;^?&quot;nb_inplace_or&quot;^?&quot;nb_floor_divide&quot;^?&quot;nb_true_divide&quot;^?&quot;nb_inplace_floor_divide&quot;^?&quot;nb_inplace_true_divide&quot;^?&quot;nb_index&quot;^?}&quot;tp_as_sequence&quot;^{_PySequenceMethods=&quot;sq_length&quot;^?&quot;sq_concat&quot;^?&quot;sq_repeat&quot;^?&quot;sq_item&quot;^?&quot;sq_slice&quot;^?&quot;sq_ass_item&quot;^?&quot;sq_ass_slice&quot;^?&quot;sq_contains&quot;^?&quot;sq_inplace_concat&quot;^?&quot;sq_inplace_repeat&quot;^?}&quot;tp_as_mapping&quot;^{_PyMappingMethods=&quot;mp_length&quot;^?&quot;mp_subscript&quot;^?&quot;mp_ass_subscript&quot;^?}&quot;tp_hash&quot;^?&quot;tp_call&quot;^?&quot;tp_str&quot;^?&quot;tp_getattro&quot;^?&quot;tp_setattro&quot;^?&quot;tp_as_buffer&quot;^{_PyBufferProcs=&quot;bf_getreadbuffer&quot;^?&quot;bf_getwritebuffer&quot;^?&quot;bf_getsegcount&quot;^?&quot;bf_getcharbuffer&quot;^?&quot;bf_getbuffer&quot;^?&quot;bf_releasebuffer&quot;^?}&quot;tp_flags&quot;l&quot;tp_doc&quot;*&quot;tp_traverse&quot;^?&quot;tp_clear&quot;^?&quot;tp_richcompare&quot;^?&quot;tp_weaklistoffset&quot;i&quot;tp_iter&quot;^?&quot;tp_iternext&quot;^?&quot;tp_methods&quot;^{PyMethodDef}&quot;tp_members&quot;^{PyMemberDef}&quot;tp_getset&quot;^{PyGetSetDef}&quot;tp_base&quot;^{_typeobject}&quot;tp_dict&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_descr_get&quot;^?&quot;tp_descr_set&quot;^?&quot;tp_dictoffset&quot;i&quot;tp_init&quot;^?&quot;tp_alloc&quot;^?&quot;tp_new&quot;^?&quot;tp_free&quot;^?&quot;tp_is_gc&quot;^?&quot;tp_bases&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_mro&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_cache&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_subclasses&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_weaklist&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_del&quot;^?&quot;tp_version_tag&quot;I}&quot;as_number&quot;{_PyNumberMethods=&quot;nb_add&quot;^?&quot;nb_subtract&quot;^?&quot;nb_multiply&quot;^?&quot;nb_divide&quot;^?&quot;nb_remainder&quot;^?&quot;nb_divmod&quot;^?&quot;nb_power&quot;^?&quot;nb_negative&quot;^?&quot;nb_positive&quot;^?&quot;nb_absolute&quot;^?&quot;nb_nonzero&quot;^?&quot;nb_invert&quot;^?&quot;nb_lshift&quot;^?&quot;nb_rshift&quot;^?&quot;nb_and&quot;^?&quot;nb_xor&quot;^?&quot;nb_or&quot;^?&quot;nb_coerce&quot;^?&quot;nb_int&quot;^?&quot;nb_long&quot;^?&quot;nb_float&quot;^?&quot;nb_oct&quot;^?&quot;nb_hex&quot;^?&quot;nb_inplace_add&quot;^?&quot;nb_inplace_subtract&quot;^?&quot;nb_inplace_multiply&quot;^?&quot;nb_inplace_divide&quot;^?&quot;nb_inplace_remainder&quot;^?&quot;nb_inplace_power&quot;^?&quot;nb_inplace_lshift&quot;^?&quot;nb_inplace_rshift&quot;^?&quot;nb_inplace_and&quot;^?&quot;nb_inplace_xor&quot;^?&quot;nb_inplace_or&quot;^?&quot;nb_floor_divide&quot;^?&quot;nb_true_divide&quot;^?&quot;nb_inplace_floor_divide&quot;^?&quot;nb_inplace_true_divide&quot;^?&quot;nb_index&quot;^?}&quot;as_mapping&quot;{_PyMappingMethods=&quot;mp_length&quot;^?&quot;mp_subscript&quot;^?&quot;mp_ass_subscript&quot;^?}&quot;as_sequence&quot;{_PySequenceMethods=&quot;sq_length&quot;^?&quot;sq_concat&quot;^?&quot;sq_repeat&quot;^?&quot;sq_item&quot;^?&quot;sq_slice&quot;^?&quot;sq_ass_item&quot;^?&quot;sq_ass_slice&quot;^?&quot;sq_contains&quot;^?&quot;sq_inplace_concat&quot;^?&quot;sq_inplace_repeat&quot;^?}&quot;as_buffer&quot;{_PyBufferProcs=&quot;bf_getreadbuffer&quot;^?&quot;bf_getwritebuffer&quot;^?&quot;bf_getsegcount&quot;^?&quot;bf_getcharbuffer&quot;^?&quot;bf_getbuffer&quot;^?&quot;bf_releasebuffer&quot;^?}&quot;ht_name&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;ht_slots&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}}' name='PyHeapTypeObject' type64='{_heaptypeobject=&quot;ht_type&quot;{_typeobject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;tp_name&quot;*&quot;tp_basicsize&quot;q&quot;tp_itemsize&quot;q&quot;tp_dealloc&quot;^?&quot;tp_print&quot;^?&quot;tp_getattr&quot;^?&quot;tp_setattr&quot;^?&quot;tp_compare&quot;^?&quot;tp_repr&quot;^?&quot;tp_as_number&quot;^{_PyNumberMethods=&quot;nb_add&quot;^?&quot;nb_subtract&quot;^?&quot;nb_multiply&quot;^?&quot;nb_divide&quot;^?&quot;nb_remainder&quot;^?&quot;nb_divmod&quot;^?&quot;nb_power&quot;^?&quot;nb_negative&quot;^?&quot;nb_positive&quot;^?&quot;nb_absolute&quot;^?&quot;nb_nonzero&quot;^?&quot;nb_invert&quot;^?&quot;nb_lshift&quot;^?&quot;nb_rshift&quot;^?&quot;nb_and&quot;^?&quot;nb_xor&quot;^?&quot;nb_or&quot;^?&quot;nb_coerce&quot;^?&quot;nb_int&quot;^?&quot;nb_long&quot;^?&quot;nb_float&quot;^?&quot;nb_oct&quot;^?&quot;nb_hex&quot;^?&quot;nb_inplace_add&quot;^?&quot;nb_inplace_subtract&quot;^?&quot;nb_inplace_multiply&quot;^?&quot;nb_inplace_divide&quot;^?&quot;nb_inplace_remainder&quot;^?&quot;nb_inplace_power&quot;^?&quot;nb_inplace_lshift&quot;^?&quot;nb_inplace_rshift&quot;^?&quot;nb_inplace_and&quot;^?&quot;nb_inplace_xor&quot;^?&quot;nb_inplace_or&quot;^?&quot;nb_floor_divide&quot;^?&quot;nb_true_divide&quot;^?&quot;nb_inplace_floor_divide&quot;^?&quot;nb_inplace_true_divide&quot;^?&quot;nb_index&quot;^?}&quot;tp_as_sequence&quot;^{_PySequenceMethods=&quot;sq_length&quot;^?&quot;sq_concat&quot;^?&quot;sq_repeat&quot;^?&quot;sq_item&quot;^?&quot;sq_slice&quot;^?&quot;sq_ass_item&quot;^?&quot;sq_ass_slice&quot;^?&quot;sq_contains&quot;^?&quot;sq_inplace_concat&quot;^?&quot;sq_inplace_repeat&quot;^?}&quot;tp_as_mapping&quot;^{_PyMappingMethods=&quot;mp_length&quot;^?&quot;mp_subscript&quot;^?&quot;mp_ass_subscript&quot;^?}&quot;tp_hash&quot;^?&quot;tp_call&quot;^?&quot;tp_str&quot;^?&quot;tp_getattro&quot;^?&quot;tp_setattro&quot;^?&quot;tp_as_buffer&quot;^{_PyBufferProcs=&quot;bf_getreadbuffer&quot;^?&quot;bf_getwritebuffer&quot;^?&quot;bf_getsegcount&quot;^?&quot;bf_getcharbuffer&quot;^?&quot;bf_getbuffer&quot;^?&quot;bf_releasebuffer&quot;^?}&quot;tp_flags&quot;q&quot;tp_doc&quot;*&quot;tp_traverse&quot;^?&quot;tp_clear&quot;^?&quot;tp_richcompare&quot;^?&quot;tp_weaklistoffset&quot;q&quot;tp_iter&quot;^?&quot;tp_iternext&quot;^?&quot;tp_methods&quot;^{PyMethodDef}&quot;tp_members&quot;^{PyMemberDef}&quot;tp_getset&quot;^{PyGetSetDef}&quot;tp_base&quot;^{_typeobject}&quot;tp_dict&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_descr_get&quot;^?&quot;tp_descr_set&quot;^?&quot;tp_dictoffset&quot;q&quot;tp_init&quot;^?&quot;tp_alloc&quot;^?&quot;tp_new&quot;^?&quot;tp_free&quot;^?&quot;tp_is_gc&quot;^?&quot;tp_bases&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_mro&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_cache&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_subclasses&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_weaklist&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_del&quot;^?&quot;tp_version_tag&quot;I}&quot;as_number&quot;{_PyNumberMethods=&quot;nb_add&quot;^?&quot;nb_subtract&quot;^?&quot;nb_multiply&quot;^?&quot;nb_divide&quot;^?&quot;nb_remainder&quot;^?&quot;nb_divmod&quot;^?&quot;nb_power&quot;^?&quot;nb_negative&quot;^?&quot;nb_positive&quot;^?&quot;nb_absolute&quot;^?&quot;nb_nonzero&quot;^?&quot;nb_invert&quot;^?&quot;nb_lshift&quot;^?&quot;nb_rshift&quot;^?&quot;nb_and&quot;^?&quot;nb_xor&quot;^?&quot;nb_or&quot;^?&quot;nb_coerce&quot;^?&quot;nb_int&quot;^?&quot;nb_long&quot;^?&quot;nb_float&quot;^?&quot;nb_oct&quot;^?&quot;nb_hex&quot;^?&quot;nb_inplace_add&quot;^?&quot;nb_inplace_subtract&quot;^?&quot;nb_inplace_multiply&quot;^?&quot;nb_inplace_divide&quot;^?&quot;nb_inplace_remainder&quot;^?&quot;nb_inplace_power&quot;^?&quot;nb_inplace_lshift&quot;^?&quot;nb_inplace_rshift&quot;^?&quot;nb_inplace_and&quot;^?&quot;nb_inplace_xor&quot;^?&quot;nb_inplace_or&quot;^?&quot;nb_floor_divide&quot;^?&quot;nb_true_divide&quot;^?&quot;nb_inplace_floor_divide&quot;^?&quot;nb_inplace_true_divide&quot;^?&quot;nb_index&quot;^?}&quot;as_mapping&quot;{_PyMappingMethods=&quot;mp_length&quot;^?&quot;mp_subscript&quot;^?&quot;mp_ass_subscript&quot;^?}&quot;as_sequence&quot;{_PySequenceMethods=&quot;sq_length&quot;^?&quot;sq_concat&quot;^?&quot;sq_repeat&quot;^?&quot;sq_item&quot;^?&quot;sq_slice&quot;^?&quot;sq_ass_item&quot;^?&quot;sq_ass_slice&quot;^?&quot;sq_contains&quot;^?&quot;sq_inplace_concat&quot;^?&quot;sq_inplace_repeat&quot;^?}&quot;as_buffer&quot;{_PyBufferProcs=&quot;bf_getreadbuffer&quot;^?&quot;bf_getwritebuffer&quot;^?&quot;bf_getsegcount&quot;^?&quot;bf_getcharbuffer&quot;^?&quot;bf_getbuffer&quot;^?&quot;bf_releasebuffer&quot;^?}&quot;ht_name&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;ht_slots&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}}'/>
<struct type='{_PyInstanceObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;in_class&quot;^{_PyClassObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;cl_bases&quot;^{_object}&quot;cl_dict&quot;^{_object}&quot;cl_name&quot;^{_object}&quot;cl_getattr&quot;^{_object}&quot;cl_setattr&quot;^{_object}&quot;cl_delattr&quot;^{_object}&quot;cl_weakreflist&quot;^{_object}}&quot;in_dict&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;in_weakreflist&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}}' name='PyInstanceObject' type64='{_PyInstanceObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;in_class&quot;^{_PyClassObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;cl_bases&quot;^{_object}&quot;cl_dict&quot;^{_object}&quot;cl_name&quot;^{_object}&quot;cl_getattr&quot;^{_object}&quot;cl_setattr&quot;^{_object}&quot;cl_delattr&quot;^{_object}&quot;cl_weakreflist&quot;^{_object}}&quot;in_dict&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;in_weakreflist&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}}'/>
<struct type='{_PyIntObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_ival&quot;l}' name='PyIntObject' type64='{_PyIntObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_ival&quot;q}'/>
<struct type='{_is=&quot;next&quot;^{_is}&quot;tstate_head&quot;^{_ts}&quot;modules&quot;^{_object}&quot;sysdict&quot;^{_object}&quot;builtins&quot;^{_object}&quot;modules_reloading&quot;^{_object}&quot;codec_search_path&quot;^{_object}&quot;codec_search_cache&quot;^{_object}&quot;codec_error_registry&quot;^{_object}&quot;dlopenflags&quot;i}' name='PyInterpreterState'/>
<struct type='{_PyListObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;ob_item&quot;^^{_object}&quot;allocated&quot;i}' name='PyListObject' type64='{_PyListObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;ob_item&quot;^^{_object}&quot;allocated&quot;q}'/>
<struct type='{_longobject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;ob_digit&quot;[1S]}' name='PyLongObject' type64='{_longobject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;ob_digit&quot;[1I]}'/>
<struct type='{_PyMappingMethods=&quot;mp_length&quot;^?&quot;mp_subscript&quot;^?&quot;mp_ass_subscript&quot;^?}' name='PyMappingMethods'/>
<struct type='{PyMemberDef=&quot;name&quot;*&quot;type&quot;i&quot;offset&quot;i&quot;flags&quot;i&quot;doc&quot;*}' name='PyMemberDef' type64='{PyMemberDef=&quot;name&quot;*&quot;type&quot;i&quot;offset&quot;q&quot;flags&quot;i&quot;doc&quot;*}'/>
<struct type='{_PyMemberDescrObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_member&quot;^{PyMemberDef}}' name='PyMemberDescrObject' type64='{_PyMemberDescrObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_member&quot;^{PyMemberDef}}'/>
<struct type='{_PyMemoryViewObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;base&quot;^{_object}&quot;view&quot;{bufferinfo=&quot;buf&quot;^v&quot;obj&quot;^{_object}&quot;len&quot;i&quot;itemsize&quot;i&quot;readonly&quot;i&quot;ndim&quot;i&quot;format&quot;*&quot;shape&quot;^i&quot;strides&quot;^i&quot;suboffsets&quot;^i&quot;smalltable&quot;[2l]&quot;internal&quot;^v}}' name='PyMemoryViewObject' type64='{_PyMemoryViewObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;base&quot;^{_object}&quot;view&quot;{bufferinfo=&quot;buf&quot;^v&quot;obj&quot;^{_object}&quot;len&quot;q&quot;itemsize&quot;q&quot;readonly&quot;i&quot;ndim&quot;i&quot;format&quot;*&quot;shape&quot;^q&quot;strides&quot;^q&quot;suboffsets&quot;^q&quot;smalltable&quot;[2q]&quot;internal&quot;^v}}'/>
<struct type='{PyMethodChain=&quot;methods&quot;^{PyMethodDef}&quot;link&quot;^{PyMethodChain}}' name='PyMethodChain'/>
<struct type='{PyMethodDef=&quot;ml_name&quot;*&quot;ml_meth&quot;^?&quot;ml_flags&quot;i&quot;ml_doc&quot;*}' name='PyMethodDef'/>
<struct type='{_PyMethodDescrObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_method&quot;^{PyMethodDef}}' name='PyMethodDescrObject' type64='{_PyMethodDescrObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_method&quot;^{PyMethodDef}}'/>
<struct type='{_PyMethodObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;im_func&quot;^{_object}&quot;im_self&quot;^{_object}&quot;im_class&quot;^{_object}&quot;im_weakreflist&quot;^{_object}}' name='PyMethodObject' type64='{_PyMethodObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;im_func&quot;^{_object}&quot;im_self&quot;^{_object}&quot;im_class&quot;^{_object}&quot;im_weakreflist&quot;^{_object}}'/>
<struct type='{_PyNumberMethods=&quot;nb_add&quot;^?&quot;nb_subtract&quot;^?&quot;nb_multiply&quot;^?&quot;nb_divide&quot;^?&quot;nb_remainder&quot;^?&quot;nb_divmod&quot;^?&quot;nb_power&quot;^?&quot;nb_negative&quot;^?&quot;nb_positive&quot;^?&quot;nb_absolute&quot;^?&quot;nb_nonzero&quot;^?&quot;nb_invert&quot;^?&quot;nb_lshift&quot;^?&quot;nb_rshift&quot;^?&quot;nb_and&quot;^?&quot;nb_xor&quot;^?&quot;nb_or&quot;^?&quot;nb_coerce&quot;^?&quot;nb_int&quot;^?&quot;nb_long&quot;^?&quot;nb_float&quot;^?&quot;nb_oct&quot;^?&quot;nb_hex&quot;^?&quot;nb_inplace_add&quot;^?&quot;nb_inplace_subtract&quot;^?&quot;nb_inplace_multiply&quot;^?&quot;nb_inplace_divide&quot;^?&quot;nb_inplace_remainder&quot;^?&quot;nb_inplace_power&quot;^?&quot;nb_inplace_lshift&quot;^?&quot;nb_inplace_rshift&quot;^?&quot;nb_inplace_and&quot;^?&quot;nb_inplace_xor&quot;^?&quot;nb_inplace_or&quot;^?&quot;nb_floor_divide&quot;^?&quot;nb_true_divide&quot;^?&quot;nb_inplace_floor_divide&quot;^?&quot;nb_inplace_true_divide&quot;^?&quot;nb_index&quot;^?}' name='PyNumberMethods'/>
<struct type='{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}' name='PyObject' type64='{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}'/>
<struct type='{_symtable_entry=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ste_id&quot;^{_object}&quot;ste_symbols&quot;^{_object}&quot;ste_name&quot;^{_object}&quot;ste_varnames&quot;^{_object}&quot;ste_children&quot;^{_object}&quot;ste_type&quot;i&quot;ste_unoptimized&quot;i&quot;ste_nested&quot;i&quot;ste_free&quot;b1&quot;ste_child_free&quot;b1&quot;ste_generator&quot;b1&quot;ste_varargs&quot;b1&quot;ste_varkeywords&quot;b1&quot;ste_returns_value&quot;b1&quot;ste_lineno&quot;i&quot;ste_opt_lineno&quot;i&quot;ste_tmpname&quot;i&quot;ste_table&quot;^{symtable}}' name='PySTEntryObject' type64='{_symtable_entry=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ste_id&quot;^{_object}&quot;ste_symbols&quot;^{_object}&quot;ste_name&quot;^{_object}&quot;ste_varnames&quot;^{_object}&quot;ste_children&quot;^{_object}&quot;ste_type&quot;i&quot;ste_unoptimized&quot;i&quot;ste_nested&quot;i&quot;ste_free&quot;b1&quot;ste_child_free&quot;b1&quot;ste_generator&quot;b1&quot;ste_varargs&quot;b1&quot;ste_varkeywords&quot;b1&quot;ste_returns_value&quot;b1&quot;ste_lineno&quot;i&quot;ste_opt_lineno&quot;i&quot;ste_tmpname&quot;i&quot;ste_table&quot;^{symtable}}'/>
<struct type='{_PySequenceMethods=&quot;sq_length&quot;^?&quot;sq_concat&quot;^?&quot;sq_repeat&quot;^?&quot;sq_item&quot;^?&quot;sq_slice&quot;^?&quot;sq_ass_item&quot;^?&quot;sq_ass_slice&quot;^?&quot;sq_contains&quot;^?&quot;sq_inplace_concat&quot;^?&quot;sq_inplace_repeat&quot;^?}' name='PySequenceMethods'/>
<struct type='{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}' name='PySetObject' type64='{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}'/>
<struct type='{_PySliceObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;start&quot;^{_object}&quot;stop&quot;^{_object}&quot;step&quot;^{_object}}' name='PySliceObject' type64='{_PySliceObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;start&quot;^{_object}&quot;stop&quot;^{_object}&quot;step&quot;^{_object}}'/>
<struct type='{_PyStringObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;ob_shash&quot;l&quot;ob_sstate&quot;i&quot;ob_sval&quot;[1c]}' name='PyStringObject' type64='{_PyStringObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;ob_shash&quot;q&quot;ob_sstate&quot;i&quot;ob_sval&quot;[1c]}'/>
<struct type='{_PyStructSequence=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;ob_item&quot;[1^{_object}]}' name='PyStructSequence' type64='{_PyStructSequence=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;ob_item&quot;[1^{_object}]}'/>
<struct type='{PyStructSequence_Desc=&quot;name&quot;*&quot;doc&quot;*&quot;fields&quot;^{PyStructSequence_Field}&quot;n_in_sequence&quot;i}' name='PyStructSequence_Desc'/>
<struct type='{PyStructSequence_Field=&quot;name&quot;*&quot;doc&quot;*}' name='PyStructSequence_Field'/>
<struct type='{_PySyntaxErrorObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;msg&quot;^{_object}&quot;filename&quot;^{_object}&quot;lineno&quot;^{_object}&quot;offset&quot;^{_object}&quot;text&quot;^{_object}&quot;print_file_and_line&quot;^{_object}}' name='PySyntaxErrorObject' type64='{_PySyntaxErrorObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;msg&quot;^{_object}&quot;filename&quot;^{_object}&quot;lineno&quot;^{_object}&quot;offset&quot;^{_object}&quot;text&quot;^{_object}&quot;print_file_and_line&quot;^{_object}}'/>
<struct type='{_PySystemExitObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;code&quot;^{_object}}' name='PySystemExitObject' type64='{_PySystemExitObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;code&quot;^{_object}}'/>
<struct type='{_ts=&quot;next&quot;^{_ts}&quot;interp&quot;^{_is}&quot;frame&quot;^{_frame}&quot;recursion_depth&quot;i&quot;tracing&quot;i&quot;use_tracing&quot;i&quot;c_profilefunc&quot;^?&quot;c_tracefunc&quot;^?&quot;c_profileobj&quot;^{_object}&quot;c_traceobj&quot;^{_object}&quot;curexc_type&quot;^{_object}&quot;curexc_value&quot;^{_object}&quot;curexc_traceback&quot;^{_object}&quot;exc_type&quot;^{_object}&quot;exc_value&quot;^{_object}&quot;exc_traceback&quot;^{_object}&quot;dict&quot;^{_object}&quot;tick_counter&quot;i&quot;gilstate_counter&quot;i&quot;async_exc&quot;^{_object}&quot;thread_id&quot;l}' name='PyThreadState' type64='{_ts=&quot;next&quot;^{_ts}&quot;interp&quot;^{_is}&quot;frame&quot;^{_frame}&quot;recursion_depth&quot;i&quot;tracing&quot;i&quot;use_tracing&quot;i&quot;c_profilefunc&quot;^?&quot;c_tracefunc&quot;^?&quot;c_profileobj&quot;^{_object}&quot;c_traceobj&quot;^{_object}&quot;curexc_type&quot;^{_object}&quot;curexc_value&quot;^{_object}&quot;curexc_traceback&quot;^{_object}&quot;exc_type&quot;^{_object}&quot;exc_value&quot;^{_object}&quot;exc_traceback&quot;^{_object}&quot;dict&quot;^{_object}&quot;tick_counter&quot;i&quot;gilstate_counter&quot;i&quot;async_exc&quot;^{_object}&quot;thread_id&quot;q}'/>
<struct type='{_traceback=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;tb_next&quot;^{_traceback}&quot;tb_frame&quot;^{_frame}&quot;tb_lasti&quot;i&quot;tb_lineno&quot;i}' name='PyTracebackObject' type64='{_traceback=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;tb_next&quot;^{_traceback}&quot;tb_frame&quot;^{_frame}&quot;tb_lasti&quot;i&quot;tb_lineno&quot;i}'/>
<struct type='{_PyTryBlock=&quot;b_type&quot;i&quot;b_handler&quot;i&quot;b_level&quot;i}' name='PyTryBlock'/>
<struct type='{_PyTupleObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;ob_item&quot;[1^{_object}]}' name='PyTupleObject' type64='{_PyTupleObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;ob_item&quot;[1^{_object}]}'/>
<struct type='{_typeobject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i&quot;tp_name&quot;*&quot;tp_basicsize&quot;i&quot;tp_itemsize&quot;i&quot;tp_dealloc&quot;^?&quot;tp_print&quot;^?&quot;tp_getattr&quot;^?&quot;tp_setattr&quot;^?&quot;tp_compare&quot;^?&quot;tp_repr&quot;^?&quot;tp_as_number&quot;^{_PyNumberMethods=&quot;nb_add&quot;^?&quot;nb_subtract&quot;^?&quot;nb_multiply&quot;^?&quot;nb_divide&quot;^?&quot;nb_remainder&quot;^?&quot;nb_divmod&quot;^?&quot;nb_power&quot;^?&quot;nb_negative&quot;^?&quot;nb_positive&quot;^?&quot;nb_absolute&quot;^?&quot;nb_nonzero&quot;^?&quot;nb_invert&quot;^?&quot;nb_lshift&quot;^?&quot;nb_rshift&quot;^?&quot;nb_and&quot;^?&quot;nb_xor&quot;^?&quot;nb_or&quot;^?&quot;nb_coerce&quot;^?&quot;nb_int&quot;^?&quot;nb_long&quot;^?&quot;nb_float&quot;^?&quot;nb_oct&quot;^?&quot;nb_hex&quot;^?&quot;nb_inplace_add&quot;^?&quot;nb_inplace_subtract&quot;^?&quot;nb_inplace_multiply&quot;^?&quot;nb_inplace_divide&quot;^?&quot;nb_inplace_remainder&quot;^?&quot;nb_inplace_power&quot;^?&quot;nb_inplace_lshift&quot;^?&quot;nb_inplace_rshift&quot;^?&quot;nb_inplace_and&quot;^?&quot;nb_inplace_xor&quot;^?&quot;nb_inplace_or&quot;^?&quot;nb_floor_divide&quot;^?&quot;nb_true_divide&quot;^?&quot;nb_inplace_floor_divide&quot;^?&quot;nb_inplace_true_divide&quot;^?&quot;nb_index&quot;^?}&quot;tp_as_sequence&quot;^{_PySequenceMethods=&quot;sq_length&quot;^?&quot;sq_concat&quot;^?&quot;sq_repeat&quot;^?&quot;sq_item&quot;^?&quot;sq_slice&quot;^?&quot;sq_ass_item&quot;^?&quot;sq_ass_slice&quot;^?&quot;sq_contains&quot;^?&quot;sq_inplace_concat&quot;^?&quot;sq_inplace_repeat&quot;^?}&quot;tp_as_mapping&quot;^{_PyMappingMethods=&quot;mp_length&quot;^?&quot;mp_subscript&quot;^?&quot;mp_ass_subscript&quot;^?}&quot;tp_hash&quot;^?&quot;tp_call&quot;^?&quot;tp_str&quot;^?&quot;tp_getattro&quot;^?&quot;tp_setattro&quot;^?&quot;tp_as_buffer&quot;^{_PyBufferProcs=&quot;bf_getreadbuffer&quot;^?&quot;bf_getwritebuffer&quot;^?&quot;bf_getsegcount&quot;^?&quot;bf_getcharbuffer&quot;^?&quot;bf_getbuffer&quot;^?&quot;bf_releasebuffer&quot;^?}&quot;tp_flags&quot;l&quot;tp_doc&quot;*&quot;tp_traverse&quot;^?&quot;tp_clear&quot;^?&quot;tp_richcompare&quot;^?&quot;tp_weaklistoffset&quot;i&quot;tp_iter&quot;^?&quot;tp_iternext&quot;^?&quot;tp_methods&quot;^{PyMethodDef}&quot;tp_members&quot;^{PyMemberDef}&quot;tp_getset&quot;^{PyGetSetDef}&quot;tp_base&quot;^{_typeobject}&quot;tp_dict&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_descr_get&quot;^?&quot;tp_descr_set&quot;^?&quot;tp_dictoffset&quot;i&quot;tp_init&quot;^?&quot;tp_alloc&quot;^?&quot;tp_new&quot;^?&quot;tp_free&quot;^?&quot;tp_is_gc&quot;^?&quot;tp_bases&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_mro&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_cache&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_subclasses&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_weaklist&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;tp_del&quot;^?&quot;tp_version_tag&quot;I}' name='PyTypeObject' type64='{_typeobject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q&quot;tp_name&quot;*&quot;tp_basicsize&quot;q&quot;tp_itemsize&quot;q&quot;tp_dealloc&quot;^?&quot;tp_print&quot;^?&quot;tp_getattr&quot;^?&quot;tp_setattr&quot;^?&quot;tp_compare&quot;^?&quot;tp_repr&quot;^?&quot;tp_as_number&quot;^{_PyNumberMethods=&quot;nb_add&quot;^?&quot;nb_subtract&quot;^?&quot;nb_multiply&quot;^?&quot;nb_divide&quot;^?&quot;nb_remainder&quot;^?&quot;nb_divmod&quot;^?&quot;nb_power&quot;^?&quot;nb_negative&quot;^?&quot;nb_positive&quot;^?&quot;nb_absolute&quot;^?&quot;nb_nonzero&quot;^?&quot;nb_invert&quot;^?&quot;nb_lshift&quot;^?&quot;nb_rshift&quot;^?&quot;nb_and&quot;^?&quot;nb_xor&quot;^?&quot;nb_or&quot;^?&quot;nb_coerce&quot;^?&quot;nb_int&quot;^?&quot;nb_long&quot;^?&quot;nb_float&quot;^?&quot;nb_oct&quot;^?&quot;nb_hex&quot;^?&quot;nb_inplace_add&quot;^?&quot;nb_inplace_subtract&quot;^?&quot;nb_inplace_multiply&quot;^?&quot;nb_inplace_divide&quot;^?&quot;nb_inplace_remainder&quot;^?&quot;nb_inplace_power&quot;^?&quot;nb_inplace_lshift&quot;^?&quot;nb_inplace_rshift&quot;^?&quot;nb_inplace_and&quot;^?&quot;nb_inplace_xor&quot;^?&quot;nb_inplace_or&quot;^?&quot;nb_floor_divide&quot;^?&quot;nb_true_divide&quot;^?&quot;nb_inplace_floor_divide&quot;^?&quot;nb_inplace_true_divide&quot;^?&quot;nb_index&quot;^?}&quot;tp_as_sequence&quot;^{_PySequenceMethods=&quot;sq_length&quot;^?&quot;sq_concat&quot;^?&quot;sq_repeat&quot;^?&quot;sq_item&quot;^?&quot;sq_slice&quot;^?&quot;sq_ass_item&quot;^?&quot;sq_ass_slice&quot;^?&quot;sq_contains&quot;^?&quot;sq_inplace_concat&quot;^?&quot;sq_inplace_repeat&quot;^?}&quot;tp_as_mapping&quot;^{_PyMappingMethods=&quot;mp_length&quot;^?&quot;mp_subscript&quot;^?&quot;mp_ass_subscript&quot;^?}&quot;tp_hash&quot;^?&quot;tp_call&quot;^?&quot;tp_str&quot;^?&quot;tp_getattro&quot;^?&quot;tp_setattro&quot;^?&quot;tp_as_buffer&quot;^{_PyBufferProcs=&quot;bf_getreadbuffer&quot;^?&quot;bf_getwritebuffer&quot;^?&quot;bf_getsegcount&quot;^?&quot;bf_getcharbuffer&quot;^?&quot;bf_getbuffer&quot;^?&quot;bf_releasebuffer&quot;^?}&quot;tp_flags&quot;q&quot;tp_doc&quot;*&quot;tp_traverse&quot;^?&quot;tp_clear&quot;^?&quot;tp_richcompare&quot;^?&quot;tp_weaklistoffset&quot;q&quot;tp_iter&quot;^?&quot;tp_iternext&quot;^?&quot;tp_methods&quot;^{PyMethodDef}&quot;tp_members&quot;^{PyMemberDef}&quot;tp_getset&quot;^{PyGetSetDef}&quot;tp_base&quot;^{_typeobject}&quot;tp_dict&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_descr_get&quot;^?&quot;tp_descr_set&quot;^?&quot;tp_dictoffset&quot;q&quot;tp_init&quot;^?&quot;tp_alloc&quot;^?&quot;tp_new&quot;^?&quot;tp_free&quot;^?&quot;tp_is_gc&quot;^?&quot;tp_bases&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_mro&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_cache&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_subclasses&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_weaklist&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;tp_del&quot;^?&quot;tp_version_tag&quot;I}'/>
<struct type='{_PyUnicodeErrorObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;encoding&quot;^{_object}&quot;object&quot;^{_object}&quot;start&quot;i&quot;end&quot;i&quot;reason&quot;^{_object}}' name='PyUnicodeErrorObject' type64='{_PyUnicodeErrorObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;dict&quot;^{_object}&quot;args&quot;^{_object}&quot;message&quot;^{_object}&quot;encoding&quot;^{_object}&quot;object&quot;^{_object}&quot;start&quot;q&quot;end&quot;q&quot;reason&quot;^{_object}}'/>
<struct type='{_PyUnicodeObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;length&quot;i&quot;str&quot;^S&quot;hash&quot;l&quot;defenc&quot;^{_object}}' name='PyUnicodeObject' type64='{_PyUnicodeObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;length&quot;q&quot;str&quot;^S&quot;hash&quot;q&quot;defenc&quot;^{_object}}'/>
<struct type='{_PyVarObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;i}' name='PyVarObject' type64='{_PyVarObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;ob_size&quot;q}'/>
<struct type='{_PyWeakReference=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;wr_object&quot;^{_object}&quot;wr_callback&quot;^{_object}&quot;hash&quot;l&quot;wr_prev&quot;^{_PyWeakReference}&quot;wr_next&quot;^{_PyWeakReference}}' name='PyWeakReference' type64='{_PyWeakReference=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;wr_object&quot;^{_object}&quot;wr_callback&quot;^{_object}&quot;hash&quot;q&quot;wr_prev&quot;^{_PyWeakReference}&quot;wr_next&quot;^{_PyWeakReference}}'/>
<struct type='{_PyWrapperDescrObject=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_base&quot;^{wrapperbase}&quot;d_wrapped&quot;^v}' name='PyWrapperDescrObject' type64='{_PyWrapperDescrObject=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}&quot;d_type&quot;^{_typeobject}&quot;d_name&quot;^{_object}&quot;d_base&quot;^{wrapperbase}&quot;d_wrapped&quot;^v}'/>
<struct type='{bufferinfo=&quot;buf&quot;^v&quot;obj&quot;^{_object}&quot;len&quot;i&quot;itemsize&quot;i&quot;readonly&quot;i&quot;ndim&quot;i&quot;format&quot;*&quot;shape&quot;^i&quot;strides&quot;^i&quot;suboffsets&quot;^i&quot;smalltable&quot;[2l]&quot;internal&quot;^v}' name='Py_buffer' type64='{bufferinfo=&quot;buf&quot;^v&quot;obj&quot;^{_object}&quot;len&quot;q&quot;itemsize&quot;q&quot;readonly&quot;i&quot;ndim&quot;i&quot;format&quot;*&quot;shape&quot;^q&quot;strides&quot;^q&quot;suboffsets&quot;^q&quot;smalltable&quot;[2q]&quot;internal&quot;^v}'/>
<struct type='{_Py_complex=&quot;real&quot;d&quot;imag&quot;d}' name='Py_complex'/>
<struct type='{PycStringIO_CAPI=&quot;cread&quot;^?&quot;creadline&quot;^?&quot;cwrite&quot;^?&quot;cgetvalue&quot;^?&quot;NewOutput&quot;^?&quot;NewInput&quot;^?&quot;InputType&quot;^{_typeobject}&quot;OutputType&quot;^{_typeobject}}' name='PycStringIO_CAPI'/>
<struct type='{_alias=&quot;name&quot;^{_object}&quot;asname&quot;^{_object}}' name='alias_ty'/>
<struct type='{_arc=&quot;a_lbl&quot;s&quot;a_arrow&quot;s}' name='arc'/>
<struct type='{_arguments=&quot;args&quot;^{_asdl_seq=&quot;size&quot;i&quot;elements&quot;[1^v]}&quot;vararg&quot;^{_object}&quot;kwarg&quot;^{_object}&quot;defaults&quot;^{_asdl_seq=&quot;size&quot;i&quot;elements&quot;[1^v]}}' name='arguments_ty'/>
<struct type='{_asdl_int_seq=&quot;size&quot;i&quot;elements&quot;[1i]}' name='asdl_int_seq'/>
<struct type='{_asdl_seq=&quot;size&quot;i&quot;elements&quot;[1^v]}' name='asdl_seq'/>
<struct type='{bufferinfo=&quot;buf&quot;^v&quot;obj&quot;^{_object}&quot;len&quot;i&quot;itemsize&quot;i&quot;readonly&quot;i&quot;ndim&quot;i&quot;format&quot;*&quot;shape&quot;^i&quot;strides&quot;^i&quot;suboffsets&quot;^i&quot;smalltable&quot;[2l]&quot;internal&quot;^v}' name='bufferinfo' type64='{bufferinfo=&quot;buf&quot;^v&quot;obj&quot;^{_object}&quot;len&quot;q&quot;itemsize&quot;q&quot;readonly&quot;i&quot;ndim&quot;i&quot;format&quot;*&quot;shape&quot;^q&quot;strides&quot;^q&quot;suboffsets&quot;^q&quot;smalltable&quot;[2q]&quot;internal&quot;^v}'/>
<struct type='{_comprehension=&quot;target&quot;^{_expr=&quot;kind&quot;i&quot;v&quot;(?=&quot;BoolOp&quot;{?=&quot;op&quot;i&quot;values&quot;^{?}}&quot;BinOp&quot;{?=&quot;left&quot;^{_expr}&quot;op&quot;i&quot;right&quot;^{_expr}}&quot;UnaryOp&quot;{?=&quot;op&quot;i&quot;operand&quot;^{_expr}}&quot;Lambda&quot;{?=&quot;args&quot;^{_arguments}&quot;body&quot;^{_expr}}&quot;IfExp&quot;{?=&quot;test&quot;^{_expr}&quot;body&quot;^{_expr}&quot;orelse&quot;^{_expr}}&quot;Dict&quot;{?=&quot;keys&quot;^{?}&quot;values&quot;^{?}}&quot;Set&quot;{?=&quot;elts&quot;^{?}}&quot;ListComp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;SetComp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;DictComp&quot;{?=&quot;key&quot;^{_expr}&quot;value&quot;^{_expr}&quot;generators&quot;^{?}}&quot;GeneratorExp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;Yield&quot;{?=&quot;value&quot;^{_expr}}&quot;Compare&quot;{?=&quot;left&quot;^{_expr}&quot;ops&quot;^{?}&quot;comparators&quot;^{?}}&quot;Call&quot;{?=&quot;func&quot;^{_expr}&quot;args&quot;^{?}&quot;keywords&quot;^{?}&quot;starargs&quot;^{_expr}&quot;kwargs&quot;^{_expr}}&quot;Repr&quot;{?=&quot;value&quot;^{_expr}}&quot;Num&quot;{?=&quot;n&quot;^{_object}}&quot;Str&quot;{?=&quot;s&quot;^{_object}}&quot;Attribute&quot;{?=&quot;value&quot;^{_expr}&quot;attr&quot;^{_object}&quot;ctx&quot;i}&quot;Subscript&quot;{?=&quot;value&quot;^{_expr}&quot;slice&quot;^{_slice}&quot;ctx&quot;i}&quot;Name&quot;{?=&quot;id&quot;^{_object}&quot;ctx&quot;i}&quot;List&quot;{?=&quot;elts&quot;^{?}&quot;ctx&quot;i}&quot;Tuple&quot;{?=&quot;elts&quot;^{?}&quot;ctx&quot;i})&quot;lineno&quot;i&quot;col_offset&quot;i}&quot;iter&quot;^{_expr=&quot;kind&quot;i&quot;v&quot;(?=&quot;BoolOp&quot;{?=&quot;op&quot;i&quot;values&quot;^{?}}&quot;BinOp&quot;{?=&quot;left&quot;^{_expr}&quot;op&quot;i&quot;right&quot;^{_expr}}&quot;UnaryOp&quot;{?=&quot;op&quot;i&quot;operand&quot;^{_expr}}&quot;Lambda&quot;{?=&quot;args&quot;^{_arguments}&quot;body&quot;^{_expr}}&quot;IfExp&quot;{?=&quot;test&quot;^{_expr}&quot;body&quot;^{_expr}&quot;orelse&quot;^{_expr}}&quot;Dict&quot;{?=&quot;keys&quot;^{?}&quot;values&quot;^{?}}&quot;Set&quot;{?=&quot;elts&quot;^{?}}&quot;ListComp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;SetComp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;DictComp&quot;{?=&quot;key&quot;^{_expr}&quot;value&quot;^{_expr}&quot;generators&quot;^{?}}&quot;GeneratorExp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;Yield&quot;{?=&quot;value&quot;^{_expr}}&quot;Compare&quot;{?=&quot;left&quot;^{_expr}&quot;ops&quot;^{?}&quot;comparators&quot;^{?}}&quot;Call&quot;{?=&quot;func&quot;^{_expr}&quot;args&quot;^{?}&quot;keywords&quot;^{?}&quot;starargs&quot;^{_expr}&quot;kwargs&quot;^{_expr}}&quot;Repr&quot;{?=&quot;value&quot;^{_expr}}&quot;Num&quot;{?=&quot;n&quot;^{_object}}&quot;Str&quot;{?=&quot;s&quot;^{_object}}&quot;Attribute&quot;{?=&quot;value&quot;^{_expr}&quot;attr&quot;^{_object}&quot;ctx&quot;i}&quot;Subscript&quot;{?=&quot;value&quot;^{_expr}&quot;slice&quot;^{_slice}&quot;ctx&quot;i}&quot;Name&quot;{?=&quot;id&quot;^{_object}&quot;ctx&quot;i}&quot;List&quot;{?=&quot;elts&quot;^{?}&quot;ctx&quot;i}&quot;Tuple&quot;{?=&quot;elts&quot;^{?}&quot;ctx&quot;i})&quot;lineno&quot;i&quot;col_offset&quot;i}&quot;ifs&quot;^{_asdl_seq=&quot;size&quot;i&quot;elements&quot;[1^v]}}' name='comprehension_ty'/>
<struct type='{_dfa=&quot;d_type&quot;i&quot;d_name&quot;*&quot;d_initial&quot;i&quot;d_nstates&quot;i&quot;d_state&quot;^{_state=&quot;s_narcs&quot;i&quot;s_arc&quot;^{_arc=&quot;a_lbl&quot;s&quot;a_arrow&quot;s}&quot;s_lower&quot;i&quot;s_upper&quot;i&quot;s_accel&quot;^i&quot;s_accept&quot;i}&quot;d_first&quot;*}' name='dfa'/>
<struct type='{_excepthandler=&quot;kind&quot;i&quot;v&quot;(?=&quot;ExceptHandler&quot;{?=&quot;type&quot;^{_expr}&quot;name&quot;^{_expr}&quot;body&quot;^{?}})&quot;lineno&quot;i&quot;col_offset&quot;i}' name='excepthandler_ty'/>
<struct type='{_expr=&quot;kind&quot;i&quot;v&quot;(?=&quot;BoolOp&quot;{?=&quot;op&quot;i&quot;values&quot;^{?}}&quot;BinOp&quot;{?=&quot;left&quot;^{_expr}&quot;op&quot;i&quot;right&quot;^{_expr}}&quot;UnaryOp&quot;{?=&quot;op&quot;i&quot;operand&quot;^{_expr}}&quot;Lambda&quot;{?=&quot;args&quot;^{_arguments}&quot;body&quot;^{_expr}}&quot;IfExp&quot;{?=&quot;test&quot;^{_expr}&quot;body&quot;^{_expr}&quot;orelse&quot;^{_expr}}&quot;Dict&quot;{?=&quot;keys&quot;^{?}&quot;values&quot;^{?}}&quot;Set&quot;{?=&quot;elts&quot;^{?}}&quot;ListComp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;SetComp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;DictComp&quot;{?=&quot;key&quot;^{_expr}&quot;value&quot;^{_expr}&quot;generators&quot;^{?}}&quot;GeneratorExp&quot;{?=&quot;elt&quot;^{_expr}&quot;generators&quot;^{?}}&quot;Yield&quot;{?=&quot;value&quot;^{_expr}}&quot;Compare&quot;{?=&quot;left&quot;^{_expr}&quot;ops&quot;^{?}&quot;comparators&quot;^{?}}&quot;Call&quot;{?=&quot;func&quot;^{_expr}&quot;args&quot;^{?}&quot;keywords&quot;^{?}&quot;starargs&quot;^{_expr}&quot;kwargs&quot;^{_expr}}&quot;Repr&quot;{?=&quot;value&quot;^{_expr}}&quot;Num&quot;{?=&quot;n&quot;^{_object}}&quot;Str&quot;{?=&quot;s&quot;^{_object}}&quot;Attribute&quot;{?=&quot;value&quot;^{_expr}&quot;attr&quot;^{_object}&quot;ctx&quot;i}&quot;Subscript&quot;{?=&quot;value&quot;^{_expr}&quot;slice&quot;^{_slice}&quot;ctx&quot;i}&quot;Name&quot;{?=&quot;id&quot;^{_object}&quot;ctx&quot;i}&quot;List&quot;{?=&quot;elts&quot;^{?}&quot;ctx&quot;i}&quot;Tuple&quot;{?=&quot;elts&quot;^{?}&quot;ctx&quot;i})&quot;lineno&quot;i&quot;col_offset&quot;i}' name='expr_ty'/>
<struct type='{_grammar=&quot;g_ndfas&quot;i&quot;g_dfa&quot;^{_dfa=&quot;d_type&quot;i&quot;d_name&quot;*&quot;d_initial&quot;i&quot;d_nstates&quot;i&quot;d_state&quot;^{_state=&quot;s_narcs&quot;i&quot;s_arc&quot;^{_arc=&quot;a_lbl&quot;s&quot;a_arrow&quot;s}&quot;s_lower&quot;i&quot;s_upper&quot;i&quot;s_accel&quot;^i&quot;s_accept&quot;i}&quot;d_first&quot;*}&quot;g_ll&quot;{_labellist=&quot;ll_nlabels&quot;i&quot;ll_label&quot;^{_label=&quot;lb_type&quot;i&quot;lb_str&quot;*}}&quot;g_start&quot;i&quot;g_accel&quot;i}' name='grammar'/>
<struct type='{_keyword=&quot;arg&quot;^{_object}&quot;value&quot;^{_expr}}' name='keyword_ty'/>
<struct type='{_label=&quot;lb_type&quot;i&quot;lb_str&quot;*}' name='label'/>
<struct type='{_labellist=&quot;ll_nlabels&quot;i&quot;ll_label&quot;^{_label=&quot;lb_type&quot;i&quot;lb_str&quot;*}}' name='labellist'/>
<struct type='{memberlist=&quot;name&quot;*&quot;type&quot;i&quot;offset&quot;i&quot;flags&quot;i}' name='memberlist'/>
<struct type='{_mod=&quot;kind&quot;i&quot;v&quot;(?=&quot;Module&quot;{?=&quot;body&quot;^{?}}&quot;Interactive&quot;{?=&quot;body&quot;^{?}}&quot;Expression&quot;{?=&quot;body&quot;^{_expr}}&quot;Suite&quot;{?=&quot;body&quot;^{?}})}' name='mod_ty'/>
<struct type='{_node=&quot;n_type&quot;s&quot;n_str&quot;*&quot;n_lineno&quot;i&quot;n_col_offset&quot;i&quot;n_nchildren&quot;i&quot;n_child&quot;^{_node}}' name='node'/>
<struct type='{_perrdetail=&quot;error&quot;i&quot;filename&quot;*&quot;lineno&quot;i&quot;offset&quot;i&quot;text&quot;*&quot;token&quot;i&quot;expected&quot;i}' name='perrdetail'/>
<struct type='{_setentry=&quot;hash&quot;l&quot;key&quot;^{_object}}' name='setentry' type64='{_setentry=&quot;hash&quot;q&quot;key&quot;^{_object}}'/>
<struct type='{_slice=&quot;kind&quot;i&quot;v&quot;(?=&quot;Slice&quot;{?=&quot;lower&quot;^{_expr}&quot;upper&quot;^{_expr}&quot;step&quot;^{_expr}}&quot;ExtSlice&quot;{?=&quot;dims&quot;^{?}}&quot;Index&quot;{?=&quot;value&quot;^{_expr}})}' name='slice_ty'/>
<struct type='{_state=&quot;s_narcs&quot;i&quot;s_arc&quot;^{_arc=&quot;a_lbl&quot;s&quot;a_arrow&quot;s}&quot;s_lower&quot;i&quot;s_upper&quot;i&quot;s_accel&quot;^i&quot;s_accept&quot;i}' name='state'/>
<struct type='{_stmt=&quot;kind&quot;i&quot;v&quot;(?=&quot;FunctionDef&quot;{?=&quot;name&quot;^{_object}&quot;args&quot;^{_arguments}&quot;body&quot;^{?}&quot;decorator_list&quot;^{?}}&quot;ClassDef&quot;{?=&quot;name&quot;^{_object}&quot;bases&quot;^{?}&quot;body&quot;^{?}&quot;decorator_list&quot;^{?}}&quot;Return&quot;{?=&quot;value&quot;^{_expr}}&quot;Delete&quot;{?=&quot;targets&quot;^{?}}&quot;Assign&quot;{?=&quot;targets&quot;^{?}&quot;value&quot;^{_expr}}&quot;AugAssign&quot;{?=&quot;target&quot;^{_expr}&quot;op&quot;i&quot;value&quot;^{_expr}}&quot;Print&quot;{?=&quot;dest&quot;^{_expr}&quot;values&quot;^{?}&quot;nl&quot;B}&quot;For&quot;{?=&quot;target&quot;^{_expr}&quot;iter&quot;^{_expr}&quot;body&quot;^{?}&quot;orelse&quot;^{?}}&quot;While&quot;{?=&quot;test&quot;^{_expr}&quot;body&quot;^{?}&quot;orelse&quot;^{?}}&quot;If&quot;{?=&quot;test&quot;^{_expr}&quot;body&quot;^{?}&quot;orelse&quot;^{?}}&quot;With&quot;{?=&quot;context_expr&quot;^{_expr}&quot;optional_vars&quot;^{_expr}&quot;body&quot;^{?}}&quot;Raise&quot;{?=&quot;type&quot;^{_expr}&quot;inst&quot;^{_expr}&quot;tback&quot;^{_expr}}&quot;TryExcept&quot;{?=&quot;body&quot;^{?}&quot;handlers&quot;^{?}&quot;orelse&quot;^{?}}&quot;TryFinally&quot;{?=&quot;body&quot;^{?}&quot;finalbody&quot;^{?}}&quot;Assert&quot;{?=&quot;test&quot;^{_expr}&quot;msg&quot;^{_expr}}&quot;Import&quot;{?=&quot;names&quot;^{?}}&quot;ImportFrom&quot;{?=&quot;module&quot;^{_object}&quot;names&quot;^{?}&quot;level&quot;i}&quot;Exec&quot;{?=&quot;body&quot;^{_expr}&quot;globals&quot;^{_expr}&quot;locals&quot;^{_expr}}&quot;Global&quot;{?=&quot;names&quot;^{?}}&quot;Expr&quot;{?=&quot;value&quot;^{_expr}})&quot;lineno&quot;i&quot;col_offset&quot;i}' name='stmt_ty'/>
<struct type='{symtable=&quot;st_filename&quot;*&quot;st_cur&quot;^{_symtable_entry}&quot;st_top&quot;^{_symtable_entry}&quot;st_symbols&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;st_stack&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;st_global&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;st_nblocks&quot;i&quot;st_private&quot;^{_object=&quot;ob_refcnt&quot;i&quot;ob_type&quot;^{_typeobject}}&quot;st_future&quot;^{_PyFutureFeatures=&quot;ff_features&quot;i&quot;ff_lineno&quot;i}}' name='symtable' type64='{symtable=&quot;st_filename&quot;*&quot;st_cur&quot;^{_symtable_entry}&quot;st_top&quot;^{_symtable_entry}&quot;st_symbols&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;st_stack&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;st_global&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;st_nblocks&quot;i&quot;st_private&quot;^{_object=&quot;ob_refcnt&quot;q&quot;ob_type&quot;^{_typeobject}}&quot;st_future&quot;^{_PyFutureFeatures=&quot;ff_features&quot;i&quot;ff_lineno&quot;i}}'/>
<struct type='{wrapperbase=&quot;name&quot;*&quot;offset&quot;i&quot;function&quot;^v&quot;wrapper&quot;^?&quot;doc&quot;*&quot;flags&quot;i&quot;name_strobj&quot;^{_object}}' name='wrapperbase'/>
<opaque type='^{_arena=}' name='PyArena'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyBaseObject_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyBaseString_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyBool_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyBuffer_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyByteArrayIter_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyByteArray_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyCFunction_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyCObject_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyCallIter_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyCapsule_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyCell_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyClassMethod_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyClass_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyCode_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyComplex_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='^^v' name='PyCurses_API'/>
<constant type='^{_PyDateTime_CAPI=^{_typeobject}^{_typeobject}^{_typeobject}^{_typeobject}^{_typeobject}^?^?^?^?^?^?}' name='PyDateTimeAPI'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDictItems_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDictIterItem_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDictIterKey_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDictIterValue_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDictKeys_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDictProxy_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDictValues_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyDict_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyEllipsis_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyEnum_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_ArithmeticError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_AssertionError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_AttributeError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_BaseException' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_BufferError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_BytesWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_DeprecationWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_EOFError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_EnvironmentError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_Exception' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_FloatingPointError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_FutureWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_GeneratorExit' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_IOError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_ImportError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_ImportWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_IndentationError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_IndexError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_KeyError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_KeyboardInterrupt' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_LookupError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_MemoryError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_MemoryErrorInst' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_NameError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_NotImplementedError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_OSError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_OverflowError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_PendingDeprecationWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_RecursionErrorInst' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_ReferenceError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_RuntimeError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_RuntimeWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_StandardError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_StopIteration' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_SyntaxError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_SyntaxWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_SystemError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_SystemExit' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_TabError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_TypeError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_UnboundLocalError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_UnicodeDecodeError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_UnicodeEncodeError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_UnicodeError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_UnicodeTranslateError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_UnicodeWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_UserWarning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_ValueError' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_Warning' type64='^{_object=q^{_typeobject}}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyExc_ZeroDivisionError' type64='^{_object=q^{_typeobject}}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyFile_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyFloat_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyFrame_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyFrozenSet_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyFunction_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyGen_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyGetSetDescr_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='^{_frozen=**i}' name='PyImport_FrozenModules'/>
<constant type='^{_inittab=*^?}' name='PyImport_Inittab'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyInstance_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyInt_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyList_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyLong_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='^{_object=i^{_typeobject}}' name='PyMac_OSErrException' type64='^{_object=q^{_typeobject}}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyMemberDescr_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyMemoryView_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyMethod_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyModule_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyNullImporter_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyProperty_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyRange_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyReversed_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PySTEntry_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PySeqIter_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PySet_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PySlice_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyStaticMethod_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyString_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='*' name='PyStructSequence_UnnamedField'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PySuper_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyTraceBack_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyTuple_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyType_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyUnicode_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' name='PyWrapperDescr_Type' type64='{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<constant type='i' name='Py_BytesWarningFlag'/>
<constant type='i' name='Py_DebugFlag'/>
<constant type='i' name='Py_DivisionWarningFlag'/>
<constant type='i' name='Py_DontWriteBytecodeFlag'/>
<constant type='*' name='Py_FileSystemDefaultEncoding'/>
<constant type='i' name='Py_FrozenFlag'/>
<constant type='i' name='Py_IgnoreEnvironmentFlag'/>
<constant type='i' name='Py_InspectFlag'/>
<constant type='i' name='Py_InteractiveFlag'/>
<constant type='i' name='Py_NoSiteFlag'/>
<constant type='i' name='Py_NoUserSiteDirectory'/>
<constant type='i' name='Py_OptimizeFlag'/>
<constant type='i' name='Py_Py3kWarningFlag'/>
<constant type='i' name='Py_TabcheckFlag'/>
<constant type='i' name='Py_UnicodeFlag'/>
<constant type='i' name='Py_UseClassExceptionsFlag'/>
<constant type='i' name='Py_VerboseFlag'/>
<constant type='^{PycStringIO_CAPI=^?^?^?^?^?^?^{_typeobject}^{_typeobject}}' name='PycStringIO'/>
<constant type='*' name='catchall_ERR'/>
<constant type='*' name='catchall_NULL'/>
<string_constant name='FUTURE_ABSOLUTE_IMPORT' value='absolute_import'/>
<string_constant name='FUTURE_DIVISION' value='division'/>
<string_constant name='FUTURE_GENERATORS' value='generators'/>
<string_constant name='FUTURE_NESTED_SCOPES' value='nested_scopes'/>
<string_constant name='FUTURE_PRINT_FUNCTION' value='print_function'/>
<string_constant name='FUTURE_UNICODE_LITERALS' value='unicode_literals'/>
<string_constant name='FUTURE_WITH_STATEMENT' value='with_statement'/>
<string_constant name='PYTHON_API_STRING' value='1013'/>
<string_constant name='PY_FORMAT_LONG_LONG' value='ll'/>
<string_constant name='PY_FORMAT_SIZE_T' value='l'/>
<string_constant name='PY_PATCHLEVEL_REVISION' value=''/>
<string_constant name='PY_STDIOTEXTMODE' value='b'/>
<string_constant name='PY_VERSION' value='2.7.2'/>
<string_constant name='PyCurses_CAPSULE_NAME' value='_curses._C_API'/>
<string_constant name='PyDateTime_CAPSULE_NAME' value='datetime.datetime_CAPI'/>
<string_constant name='PyExpat_CAPI_MAGIC' value='pyexpat.expat_CAPI 1.0'/>
<string_constant name='PyExpat_CAPSULE_NAME' value='pyexpat.expat_CAPI'/>
<string_constant name='PyUnicodeData_CAPSULE_NAME' value='unicodedata.ucnhash_CAPI'/>
<string_constant name='PycStringIO_CAPSULE_NAME' value='cStringIO.cStringIO_CAPI'/>
<string_constant name='SHLIB_EXT' value='.so'/>
<enum name='AC_APPLE_UNIVERSAL_BUILD' value='1'/>
<enum name='ALT' value='259'/>
<enum name='AMPER' value='19'/>
<enum name='AMPEREQUAL' value='42'/>
<enum name='AT' value='50'/>
<enum name='ATOM' value='261'/>
<enum name='Add' value='1'/>
<enum name='And' value='1'/>
<enum name='Assert_kind' value='15'/>
<enum name='Assign_kind' value='5'/>
<enum name='Attribute_kind' value='18'/>
<enum name='AugAssign_kind' value='6'/>
<enum name='AugLoad' value='4'/>
<enum name='AugStore' value='5'/>
<enum name='BACKQUOTE' value='25'/>
<enum name='BASE' value='32768' value64='1073741824'/>
<enum name='BINARY_ADD' value='23'/>
<enum name='BINARY_AND' value='64'/>
<enum name='BINARY_DIVIDE' value='21'/>
<enum name='BINARY_FLOOR_DIVIDE' value='26'/>
<enum name='BINARY_LSHIFT' value='62'/>
<enum name='BINARY_MODULO' value='22'/>
<enum name='BINARY_MULTIPLY' value='20'/>
<enum name='BINARY_OR' value='66'/>
<enum name='BINARY_POWER' value='19'/>
<enum name='BINARY_RSHIFT' value='63'/>
<enum name='BINARY_SUBSCR' value='25'/>
<enum name='BINARY_SUBTRACT' value='24'/>
<enum name='BINARY_TRUE_DIVIDE' value='27'/>
<enum name='BINARY_XOR' value='65'/>
<enum name='BITSPERBYTE' value='8'/>
<enum name='BREAK_LOOP' value='80'/>
<enum name='BUILD_CLASS' value='89'/>
<enum name='BUILD_LIST' value='103'/>
<enum name='BUILD_MAP' value='105'/>
<enum name='BUILD_SET' value='104'/>
<enum name='BUILD_SLICE' value='133'/>
<enum name='BUILD_TUPLE' value='102'/>
<enum name='BinOp_kind' value='2'/>
<enum name='BoolOp_kind' value='1'/>
<enum name='Break_kind' value='22'/>
<enum name='CALL_FUNCTION' value='131'/>
<enum name='CALL_FUNCTION_KW' value='141'/>
<enum name='CALL_FUNCTION_VAR' value='140'/>
<enum name='CALL_FUNCTION_VAR_KW' value='142'/>
<enum name='CELL' value='5'/>
<enum name='CIRCUMFLEX' value='33'/>
<enum name='CIRCUMFLEXEQUAL' value='44'/>
<enum name='COLON' value='11'/>
<enum name='COMMA' value='12'/>
<enum name='COMPARE_OP' value='107'/>
<enum name='CONTINUE_LOOP' value='119'/>
<enum name='CO_FUTURE_ABSOLUTE_IMPORT' value='16384'/>
<enum name='CO_FUTURE_DIVISION' value='8192'/>
<enum name='CO_FUTURE_PRINT_FUNCTION' value='65536'/>
<enum name='CO_FUTURE_UNICODE_LITERALS' value='131072'/>
<enum name='CO_FUTURE_WITH_STATEMENT' value='32768'/>
<enum name='CO_GENERATOR' value='32'/>
<enum name='CO_MAXBLOCKS' value='20'/>
<enum name='CO_NESTED' value='16'/>
<enum name='CO_NEWLOCALS' value='2'/>
<enum name='CO_NOFREE' value='64'/>
<enum name='CO_OPTIMIZED' value='1'/>
<enum name='CO_VARARGS' value='4'/>
<enum name='CO_VARKEYWORDS' value='8'/>
<enum name='Call_kind' value='14'/>
<enum name='ClassBlock' value='1'/>
<enum name='ClassDef_kind' value='2'/>
<enum name='Compare_kind' value='13'/>
<enum name='Continue_kind' value='23'/>
<enum name='DATETIME_API_MAGIC' value='1095059669'/>
<enum name='DEDENT' value='6'/>
<enum name='DEF_BOUND' value='70'/>
<enum name='DEF_FREE' value='16'/>
<enum name='DEF_FREE_CLASS' value='32'/>
<enum name='DEF_GLOBAL' value='1'/>
<enum name='DEF_IMPORT' value='64'/>
<enum name='DEF_LOCAL' value='2'/>
<enum name='DEF_PARAM' value='4'/>
<enum name='DELETE_ATTR' value='96'/>
<enum name='DELETE_FAST' value='126'/>
<enum name='DELETE_GLOBAL' value='98'/>
<enum name='DELETE_NAME' value='91'/>
<enum name='DELETE_SLICE' value='50'/>
<enum name='DELETE_SUBSCR' value='61'/>
<enum name='DELIM' value='58'/>
<enum name='DOT' value='23'/>
<enum name='DOUBLESLASH' value='48'/>
<enum name='DOUBLESLASHEQUAL' value='49'/>
<enum name='DOUBLESTAR' value='36'/>
<enum name='DOUBLESTAREQUAL' value='47'/>
<enum name='DUP_TOP' value='4'/>
<enum name='DUP_TOPX' value='99'/>
<enum name='Del' value='3'/>
<enum name='Delete_kind' value='4'/>
<enum name='DictComp_kind' value='10'/>
<enum name='Dict_kind' value='6'/>
<enum name='Div' value='4'/>
<enum name='EMPTY' value='0'/>
<enum name='ENABLE_IPV6' value='1'/>
<enum name='ENDMARKER' value='0'/>
<enum name='END_FINALLY' value='88'/>
<enum name='EQEQUAL' value='28'/>
<enum name='EQUAL' value='22'/>
<enum name='ERRORTOKEN' value='52'/>
<enum name='EXEC_STMT' value='85'/>
<enum name='EXTENDED_ARG' value='145'/>
<enum name='E_DECODE' value='22'/>
<enum name='E_DEDENT' value='21'/>
<enum name='E_DONE' value='16'/>
<enum name='E_EOF' value='11'/>
<enum name='E_EOFS' value='23'/>
<enum name='E_EOLS' value='24'/>
<enum name='E_ERROR' value='17'/>
<enum name='E_INTR' value='12'/>
<enum name='E_LINECONT' value='25'/>
<enum name='E_NOMEM' value='15'/>
<enum name='E_OK' value='10'/>
<enum name='E_OVERFLOW' value='19'/>
<enum name='E_SYNTAX' value='14'/>
<enum name='E_TABSPACE' value='18'/>
<enum name='E_TOKEN' value='13'/>
<enum name='E_TOODEEP' value='20'/>
<enum name='Ellipsis_kind' value='1'/>
<enum name='Eq' value='1'/>
<enum name='ExceptHandler_kind' value='1'/>
<enum name='Exec_kind' value='18'/>
<enum name='Expr_kind' value='20'/>
<enum name='Expression_kind' value='3'/>
<enum name='ExtSlice_kind' value='3'/>
<enum name='FOR_ITER' value='93'/>
<enum name='FREE' value='4'/>
<enum name='FloorDiv' value='12'/>
<enum name='For_kind' value='8'/>
<enum name='FunctionBlock' value='0'/>
<enum name='FunctionDef_kind' value='1'/>
<enum name='GENERATOR' value='1'/>
<enum name='GENERATOR_EXPRESSION' value='2'/>
<enum name='GET_ITER' value='68'/>
<enum name='GLOBAL_EXPLICIT' value='2'/>
<enum name='GLOBAL_IMPLICIT' value='3'/>
<enum name='GREATER' value='21'/>
<enum name='GREATEREQUAL' value='31'/>
<enum name='GeneratorExp_kind' value='11'/>
<enum name='Global_kind' value='19'/>
<enum name='Gt' value='5'/>
<enum name='GtE' value='6'/>
<enum name='HAVE_ACOSH' value='1'/>
<enum name='HAVE_ADDRINFO' value='1'/>
<enum name='HAVE_ALARM' value='1'/>
<enum name='HAVE_ARGUMENT' value='90'/>
<enum name='HAVE_ASINH' value='1'/>
<enum name='HAVE_ATANH' value='1'/>
<enum name='HAVE_BROKEN_SEM_GETVALUE' value='1'/>
<enum name='HAVE_C99_BOOL' value='1'/>
<enum name='HAVE_CHOWN' value='1'/>
<enum name='HAVE_CHROOT' value='1'/>
<enum name='HAVE_CLOCK' value='1'/>
<enum name='HAVE_CONFSTR' value='1'/>
<enum name='HAVE_COPYSIGN' value='1'/>
<enum name='HAVE_CTERMID' value='1'/>
<enum name='HAVE_CTERMID_R' value='1'/>
<enum name='HAVE_CURSES_H' value='1'/>
<enum name='HAVE_CURSES_IS_TERM_RESIZED' value='1'/>
<enum name='HAVE_CURSES_RESIZETERM' value='1'/>
<enum name='HAVE_CURSES_RESIZE_TERM' value='1'/>
<enum name='HAVE_DECL_ISFINITE' value='1'/>
<enum name='HAVE_DECL_ISINF' value='1'/>
<enum name='HAVE_DECL_ISNAN' value='1'/>
<enum name='HAVE_DEVICE_MACROS' value='1'/>
<enum name='HAVE_DEV_PTMX' value='1'/>
<enum name='HAVE_DIRENT_H' value='1'/>
<enum name='HAVE_DLFCN_H' value='1'/>
<enum name='HAVE_DLOPEN' value='1'/>
<enum name='HAVE_DUP2' value='1'/>
<enum name='HAVE_DYNAMIC_LOADING' value='1'/>
<enum name='HAVE_ERF' value='1'/>
<enum name='HAVE_ERFC' value='1'/>
<enum name='HAVE_ERRNO_H' value='1'/>
<enum name='HAVE_EXECV' value='1'/>
<enum name='HAVE_EXPM1' value='1'/>
<enum name='HAVE_FCHDIR' value='1'/>
<enum name='HAVE_FCHMOD' value='1'/>
<enum name='HAVE_FCHOWN' value='1'/>
<enum name='HAVE_FCNTL_H' value='1'/>
<enum name='HAVE_FINITE' value='1'/>
<enum name='HAVE_FLOCK' value='1'/>
<enum name='HAVE_FORK' value='1'/>
<enum name='HAVE_FORKPTY' value='1'/>
<enum name='HAVE_FPATHCONF' value='1'/>
<enum name='HAVE_FSEEKO' value='1'/>
<enum name='HAVE_FSTATVFS' value='1'/>
<enum name='HAVE_FSYNC' value='1'/>
<enum name='HAVE_FTELLO' value='1'/>
<enum name='HAVE_FTIME' value='1'/>
<enum name='HAVE_FTRUNCATE' value='1'/>
<enum name='HAVE_GAI_STRERROR' value='1'/>
<enum name='HAVE_GAMMA' value='1'/>
<enum name='HAVE_GETADDRINFO' value='1'/>
<enum name='HAVE_GETCWD' value='1'/>
<enum name='HAVE_GETC_UNLOCKED' value='1'/>
<enum name='HAVE_GETGROUPS' value='1'/>
<enum name='HAVE_GETHOSTBYNAME' value='1'/>
<enum name='HAVE_GETITIMER' value='1'/>
<enum name='HAVE_GETLOADAVG' value='1'/>
<enum name='HAVE_GETLOGIN' value='1'/>
<enum name='HAVE_GETNAMEINFO' value='1'/>
<enum name='HAVE_GETPAGESIZE' value='1'/>
<enum name='HAVE_GETPEERNAME' value='1'/>
<enum name='HAVE_GETPGID' value='1'/>
<enum name='HAVE_GETPGRP' value='1'/>
<enum name='HAVE_GETPID' value='1'/>
<enum name='HAVE_GETPRIORITY' value='1'/>
<enum name='HAVE_GETPWENT' value='1'/>
<enum name='HAVE_GETSID' value='1'/>
<enum name='HAVE_GETTIMEOFDAY' value='1'/>
<enum name='HAVE_GETWD' value='1'/>
<enum name='HAVE_GRP_H' value='1'/>
<enum name='HAVE_HSTRERROR' value='1'/>
<enum name='HAVE_HYPOT' value='1'/>
<enum name='HAVE_INET_ATON' value='1'/>
<enum name='HAVE_INET_PTON' value='1'/>
<enum name='HAVE_INITGROUPS' value='1'/>
<enum name='HAVE_INT32_T' value='1'/>
<enum name='HAVE_INT64_T' value='1'/>
<enum name='HAVE_INTTYPES_H' value='1'/>
<enum name='HAVE_KILL' value='1'/>
<enum name='HAVE_KILLPG' value='1'/>
<enum name='HAVE_KQUEUE' value='1'/>
<enum name='HAVE_LANGINFO_H' value='1'/>
<enum name='HAVE_LCHMOD' value='1'/>
<enum name='HAVE_LCHOWN' value='1'/>
<enum name='HAVE_LGAMMA' value='1'/>
<enum name='HAVE_LIBDL' value='1'/>
<enum name='HAVE_LIBREADLINE' value='1'/>
<enum name='HAVE_LIBUTIL_H' value='1'/>
<enum name='HAVE_LINK' value='1'/>
<enum name='HAVE_LOG1P' value='1'/>
<enum name='HAVE_LONG_DOUBLE' value='1'/>
<enum name='HAVE_LONG_LONG' value='1'/>
<enum name='HAVE_LSTAT' value='1'/>
<enum name='HAVE_MAKEDEV' value='1'/>
<enum name='HAVE_MEMMOVE' value='1'/>
<enum name='HAVE_MEMORY_H' value='1'/>
<enum name='HAVE_MKFIFO' value='1'/>
<enum name='HAVE_MKNOD' value='1'/>
<enum name='HAVE_MKTIME' value='1'/>
<enum name='HAVE_NCURSES_H' value='1'/>
<enum name='HAVE_NICE' value='1'/>
<enum name='HAVE_OPENPTY' value='1'/>
<enum name='HAVE_OSX105_SDK' value='1'/>
<enum name='HAVE_PATHCONF' value='1'/>
<enum name='HAVE_PAUSE' value='1'/>
<enum name='HAVE_PROTOTYPES' value='1'/>
<enum name='HAVE_PTHREAD_H' value='1'/>
<enum name='HAVE_PTHREAD_INIT' value='1'/>
<enum name='HAVE_PTHREAD_SIGMASK' value='1'/>
<enum name='HAVE_PUTENV' value='1'/>
<enum name='HAVE_READLINK' value='1'/>
<enum name='HAVE_REALPATH' value='1'/>
<enum name='HAVE_RL_CALLBACK' value='1'/>
<enum name='HAVE_RL_COMPLETION_APPEND_CHARACTER' value='1'/>
<enum name='HAVE_RL_COMPLETION_MATCHES' value='1'/>
<enum name='HAVE_RL_PRE_INPUT_HOOK' value='1'/>
<enum name='HAVE_ROUND' value='1'/>
<enum name='HAVE_SELECT' value='1'/>
<enum name='HAVE_SEM_GETVALUE' value='1'/>
<enum name='HAVE_SEM_OPEN' value='1'/>
<enum name='HAVE_SEM_UNLINK' value='1'/>
<enum name='HAVE_SETEGID' value='1'/>
<enum name='HAVE_SETEUID' value='1'/>
<enum name='HAVE_SETGID' value='1'/>
<enum name='HAVE_SETGROUPS' value='1'/>
<enum name='HAVE_SETITIMER' value='1'/>
<enum name='HAVE_SETLOCALE' value='1'/>
<enum name='HAVE_SETPGID' value='1'/>
<enum name='HAVE_SETPGRP' value='1'/>
<enum name='HAVE_SETREGID' value='1'/>
<enum name='HAVE_SETREUID' value='1'/>
<enum name='HAVE_SETSID' value='1'/>
<enum name='HAVE_SETUID' value='1'/>
<enum name='HAVE_SETVBUF' value='1'/>
<enum name='HAVE_SIGACTION' value='1'/>
<enum name='HAVE_SIGINTERRUPT' value='1'/>
<enum name='HAVE_SIGNAL_H' value='1'/>
<enum name='HAVE_SIGRELSE' value='1'/>
<enum name='HAVE_SNPRINTF' value='1'/>
<enum name='HAVE_SOCKADDR_SA_LEN' value='1'/>
<enum name='HAVE_SOCKADDR_STORAGE' value='1'/>
<enum name='HAVE_SOCKETPAIR' value='1'/>
<enum name='HAVE_SPAWN_H' value='1'/>
<enum name='HAVE_SSIZE_T' value='1'/>
<enum name='HAVE_STATVFS' value='1'/>
<enum name='HAVE_STAT_TV_NSEC2' value='1'/>
<enum name='HAVE_STDARG_PROTOTYPES' value='1'/>
<enum name='HAVE_STDINT_H' value='1'/>
<enum name='HAVE_STDLIB_H' value='1'/>
<enum name='HAVE_STRDUP' value='1'/>
<enum name='HAVE_STRFTIME' value='1'/>
<enum name='HAVE_STRINGS_H' value='1'/>
<enum name='HAVE_STRING_H' value='1'/>
<enum name='HAVE_STRUCT_STAT_ST_BIRTHTIME' value='1'/>
<enum name='HAVE_STRUCT_STAT_ST_BLKSIZE' value='1'/>
<enum name='HAVE_STRUCT_STAT_ST_BLOCKS' value='1'/>
<enum name='HAVE_STRUCT_STAT_ST_FLAGS' value='1'/>
<enum name='HAVE_STRUCT_STAT_ST_GEN' value='1'/>
<enum name='HAVE_STRUCT_STAT_ST_RDEV' value='1'/>
<enum name='HAVE_STRUCT_TM_TM_ZONE' value='1'/>
<enum name='HAVE_ST_BLOCKS' value='1'/>
<enum name='HAVE_SYMLINK' value='1'/>
<enum name='HAVE_SYSCONF' value='1'/>
<enum name='HAVE_SYSEXITS_H' value='1'/>
<enum name='HAVE_SYS_EVENT_H' value='1'/>
<enum name='HAVE_SYS_FILE_H' value='1'/>
<enum name='HAVE_SYS_LOCK_H' value='1'/>
<enum name='HAVE_SYS_PARAM_H' value='1'/>
<enum name='HAVE_SYS_POLL_H' value='1'/>
<enum name='HAVE_SYS_RESOURCE_H' value='1'/>
<enum name='HAVE_SYS_SELECT_H' value='1'/>
<enum name='HAVE_SYS_SOCKET_H' value='1'/>
<enum name='HAVE_SYS_STATVFS_H' value='1'/>
<enum name='HAVE_SYS_STAT_H' value='1'/>
<enum name='HAVE_SYS_TIMES_H' value='1'/>
<enum name='HAVE_SYS_TIME_H' value='1'/>
<enum name='HAVE_SYS_TYPES_H' value='1'/>
<enum name='HAVE_SYS_UN_H' value='1'/>
<enum name='HAVE_SYS_UTSNAME_H' value='1'/>
<enum name='HAVE_SYS_WAIT_H' value='1'/>
<enum name='HAVE_TCGETPGRP' value='1'/>
<enum name='HAVE_TCSETPGRP' value='1'/>
<enum name='HAVE_TEMPNAM' value='1'/>
<enum name='HAVE_TERMIOS_H' value='1'/>
<enum name='HAVE_TERM_H' value='1'/>
<enum name='HAVE_TGAMMA' value='1'/>
<enum name='HAVE_TIMEGM' value='1'/>
<enum name='HAVE_TIMES' value='1'/>
<enum name='HAVE_TMPFILE' value='1'/>
<enum name='HAVE_TMPNAM' value='1'/>
<enum name='HAVE_TM_ZONE' value='1'/>
<enum name='HAVE_TRUNCATE' value='1'/>
<enum name='HAVE_UINT32_T' value='1'/>
<enum name='HAVE_UINT64_T' value='1'/>
<enum name='HAVE_UINTPTR_T' value='1'/>
<enum name='HAVE_UNAME' value='1'/>
<enum name='HAVE_UNISTD_H' value='1'/>
<enum name='HAVE_UNSETENV' value='1'/>
<enum name='HAVE_UTIL_H' value='1'/>
<enum name='HAVE_UTIMES' value='1'/>
<enum name='HAVE_UTIME_H' value='1'/>
<enum name='HAVE_WAIT3' value='1'/>
<enum name='HAVE_WAIT4' value='1'/>
<enum name='HAVE_WAITPID' value='1'/>
<enum name='HAVE_WCHAR_H' value='1'/>
<enum name='HAVE_WCSCOLL' value='1'/>
<enum name='HAVE_WORKING_TZSET' value='1'/>
<enum name='HAVE_ZLIB_COPY' value='1'/>
<enum name='IMPORT_FROM' value='109'/>
<enum name='IMPORT_NAME' value='108'/>
<enum name='IMPORT_STAR' value='84'/>
<enum name='INDENT' value='5'/>
<enum name='INPLACE_ADD' value='55'/>
<enum name='INPLACE_AND' value='77'/>
<enum name='INPLACE_DIVIDE' value='58'/>
<enum name='INPLACE_FLOOR_DIVIDE' value='28'/>
<enum name='INPLACE_LSHIFT' value='75'/>
<enum name='INPLACE_MODULO' value='59'/>
<enum name='INPLACE_MULTIPLY' value='57'/>
<enum name='INPLACE_OR' value='79'/>
<enum name='INPLACE_POWER' value='67'/>
<enum name='INPLACE_RSHIFT' value='76'/>
<enum name='INPLACE_SUBTRACT' value='56'/>
<enum name='INPLACE_TRUE_DIVIDE' value='29'/>
<enum name='INPLACE_XOR' value='78'/>
<enum name='ITEM' value='260'/>
<enum name='IfExp_kind' value='5'/>
<enum name='If_kind' value='10'/>
<enum name='ImportFrom_kind' value='17'/>
<enum name='Import_kind' value='16'/>
<enum name='In' value='9'/>
<enum name='Index_kind' value='4'/>
<enum name='Interactive_kind' value='2'/>
<enum name='Invert' value='1'/>
<enum name='Is' value='7'/>
<enum name='IsNot' value='8'/>
<enum name='JUMP_ABSOLUTE' value='113'/>
<enum name='JUMP_FORWARD' value='110'/>
<enum name='JUMP_IF_FALSE_OR_POP' value='111'/>
<enum name='JUMP_IF_TRUE_OR_POP' value='112'/>
<enum name='LBRACE' value='26'/>
<enum name='LEFTSHIFT' value='34'/>
<enum name='LEFTSHIFTEQUAL' value='45'/>
<enum name='LESS' value='20'/>
<enum name='LESSEQUAL' value='30'/>
<enum name='LIST_APPEND' value='94'/>
<enum name='LOAD_ATTR' value='106'/>
<enum name='LOAD_CLOSURE' value='135'/>
<enum name='LOAD_CONST' value='100'/>
<enum name='LOAD_DEREF' value='136'/>
<enum name='LOAD_FAST' value='124'/>
<enum name='LOAD_GLOBAL' value='116'/>
<enum name='LOAD_LOCALS' value='82'/>
<enum name='LOAD_NAME' value='101'/>
<enum name='LOCAL' value='1'/>
<enum name='LPAR' value='7'/>
<enum name='LSQB' value='9'/>
<enum name='LShift' value='7'/>
<enum name='Lambda_kind' value='4'/>
<enum name='ListComp_kind' value='8'/>
<enum name='List_kind' value='21'/>
<enum name='Load' value='1'/>
<enum name='Lt' value='3'/>
<enum name='LtE' value='4'/>
<enum name='MAKE_CLOSURE' value='134'/>
<enum name='MAKE_FUNCTION' value='132'/>
<enum name='MAP_ADD' value='147'/>
<enum name='MASK' value='32767' value64='1073741823'/>
<enum name='METH_CLASS' value='16'/>
<enum name='METH_COEXIST' value='64'/>
<enum name='METH_KEYWORDS' value='2'/>
<enum name='METH_NOARGS' value='4'/>
<enum name='METH_O' value='8'/>
<enum name='METH_OLDARGS' value='0'/>
<enum name='METH_STATIC' value='32'/>
<enum name='METH_VARARGS' value='1'/>
<enum name='MINEQUAL' value='38'/>
<enum name='MINUS' value='15'/>
<enum name='MSTART' value='256'/>
<enum name='MVWDELCH_IS_EXPRESSION' value='1'/>
<enum name='Mod' value='5'/>
<enum name='ModuleBlock' value='2'/>
<enum name='Module_kind' value='1'/>
<enum name='Mult' value='3'/>
<enum name='NAME' value='1'/>
<enum name='NCURSES_OPAQUE' value='0'/>
<enum name='NEWLINE' value='4'/>
<enum name='NOP' value='9'/>
<enum name='NOTEQUAL' value='29'/>
<enum name='NOWAIT_LOCK' value='0'/>
<enum name='NT_OFFSET' value='256'/>
<enum name='NUMBER' value='2'/>
<enum name='N_TOKENS' value='53'/>
<enum name='Name_kind' value='20'/>
<enum name='Not' value='2'/>
<enum name='NotEq' value='2'/>
<enum name='NotIn' value='10'/>
<enum name='Num_kind' value='16'/>
<enum name='OP' value='51'/>
<enum name='OPT_BARE_EXEC' value='4'/>
<enum name='OPT_EXEC' value='2'/>
<enum name='OPT_IMPORT_STAR' value='1'/>
<enum name='OPT_TOPLEVEL' value='8'/>
<enum name='Or' value='2'/>
<enum name='PERCENT' value='24'/>
<enum name='PERCENTEQUAL' value='41'/>
<enum name='PLUS' value='14'/>
<enum name='PLUSEQUAL' value='37'/>
<enum name='POP_BLOCK' value='87'/>
<enum name='POP_JUMP_IF_FALSE' value='114'/>
<enum name='POP_JUMP_IF_TRUE' value='115'/>
<enum name='POP_TOP' value='1'/>
<enum name='PRINT_EXPR' value='70'/>
<enum name='PRINT_ITEM' value='71'/>
<enum name='PRINT_ITEM_TO' value='73'/>
<enum name='PRINT_NEWLINE' value='72'/>
<enum name='PRINT_NEWLINE_TO' value='74'/>
<enum name='PTHREAD_SYSTEM_SCHED_SUPPORTED' value='1'/>
<enum name='PYLONG_BITS_IN_DIGIT' value='15' value64='30'/>
<enum name='PYOS_STACK_MARGIN' value='2048'/>
<enum name='PYTHON_API_VERSION' value='1013'/>
<enum name='PY_CTF_ALNUM' value='7'/>
<enum name='PY_CTF_ALPHA' value='3'/>
<enum name='PY_CTF_DIGIT' value='4'/>
<enum name='PY_CTF_LOWER' value='1'/>
<enum name='PY_CTF_SPACE' value='8'/>
<enum name='PY_CTF_UPPER' value='2'/>
<enum name='PY_CTF_XDIGIT' value='16'/>
<enum name='PY_ITERSEARCH_CONTAINS' value='3'/>
<enum name='PY_ITERSEARCH_COUNT' value='1'/>
<enum name='PY_ITERSEARCH_INDEX' value='2'/>
<enum name='PY_LLONG_MAX' value='9223372036854775807'/>
<enum name='PY_LLONG_MIN' value='-9223372036854775808'/>
<enum name='PY_MAJOR_VERSION' value='2'/>
<enum name='PY_MICRO_VERSION' value='2'/>
<enum name='PY_MINOR_VERSION' value='7'/>
<enum name='PY_RELEASE_LEVEL' value='15'/>
<enum name='PY_RELEASE_LEVEL_ALPHA' value='10'/>
<enum name='PY_RELEASE_LEVEL_BETA' value='11'/>
<enum name='PY_RELEASE_LEVEL_FINAL' value='15'/>
<enum name='PY_RELEASE_LEVEL_GAMMA' value='12'/>
<enum name='PY_RELEASE_SERIAL' value='0'/>
<enum name='PY_SIZE_MAX' value='4294967295' value64='18446744073709551615'/>
<enum name='PY_SSIZE_T_MAX' value='2147483647' value64='9223372036854775807'/>
<enum name='PY_SSIZE_T_MIN' value='-2147483648' value64='-9223372036854775808'/>
<enum name='PY_ULLONG_MAX' value='18446744073709551615'/>
<enum name='PY_VERSION_HEX' value='34013936'/>
<enum name='PY_WRITE_RESTRICTED' value='4'/>
<enum name='Param' value='6'/>
<enum name='Pass_kind' value='21'/>
<enum name='Pow' value='6'/>
<enum name='Print_kind' value='7'/>
<enum name='PyBUF_ANY_CONTIGUOUS' value='152'/>
<enum name='PyBUF_CONTIG' value='9'/>
<enum name='PyBUF_CONTIG_RO' value='8'/>
<enum name='PyBUF_C_CONTIGUOUS' value='56'/>
<enum name='PyBUF_FORMAT' value='4'/>
<enum name='PyBUF_FULL' value='285'/>
<enum name='PyBUF_FULL_RO' value='284'/>
<enum name='PyBUF_F_CONTIGUOUS' value='88'/>
<enum name='PyBUF_INDIRECT' value='280'/>
<enum name='PyBUF_ND' value='8'/>
<enum name='PyBUF_READ' value='256'/>
<enum name='PyBUF_RECORDS' value='29'/>
<enum name='PyBUF_RECORDS_RO' value='28'/>
<enum name='PyBUF_SHADOW' value='1024'/>
<enum name='PyBUF_SIMPLE' value='0'/>
<enum name='PyBUF_STRIDED' value='25'/>
<enum name='PyBUF_STRIDED_RO' value='24'/>
<enum name='PyBUF_STRIDES' value='24'/>
<enum name='PyBUF_WRITABLE' value='1'/>
<enum name='PyBUF_WRITE' value='512'/>
<enum name='PyBUF_WRITEABLE' value='1'/>
<enum name='PyCF_DONT_IMPLY_DEDENT' value='512'/>
<enum name='PyCF_MASK' value='253952'/>
<enum name='PyCF_MASK_OBSOLETE' value='16'/>
<enum name='PyCF_ONLY_AST' value='1024'/>
<enum name='PyCF_SOURCE_IS_UTF8' value='256'/>
<enum name='PyCmp_BAD' value='11'/>
<enum name='PyCmp_EQ' value='2'/>
<enum name='PyCmp_EXC_MATCH' value='10'/>
<enum name='PyCmp_GE' value='5'/>
<enum name='PyCmp_GT' value='4'/>
<enum name='PyCmp_IN' value='6'/>
<enum name='PyCmp_IS' value='8'/>
<enum name='PyCmp_IS_NOT' value='9'/>
<enum name='PyCmp_LE' value='1'/>
<enum name='PyCmp_LT' value='0'/>
<enum name='PyCmp_NE' value='3'/>
<enum name='PyCmp_NOT_IN' value='7'/>
<enum name='PyCurses_API_pointers' value='4'/>
<enum name='PyDict_MINSIZE' value='8'/>
<enum name='PyFloat_STR_PRECISION' value='12'/>
<enum name='PyGC_HEAD_SIZE' value='0'/>
<enum name='PyGILState_LOCKED' value='0'/>
<enum name='PyGILState_UNLOCKED' value='1'/>
<enum name='PyLong_BASE' value='32768' value64='1073741824'/>
<enum name='PyLong_MASK' value='32767' value64='1073741823'/>
<enum name='PyLong_SHIFT' value='15' value64='30'/>
<enum name='PyPARSE_DONT_IMPLY_DEDENT' value='2'/>
<enum name='PyPARSE_PRINT_IS_FUNCTION' value='4'/>
<enum name='PyPARSE_UNICODE_LITERALS' value='8'/>
<enum name='PySet_MINSIZE' value='8'/>
<enum name='PyTrace_CALL' value='0'/>
<enum name='PyTrace_C_CALL' value='4'/>
<enum name='PyTrace_C_EXCEPTION' value='5'/>
<enum name='PyTrace_C_RETURN' value='6'/>
<enum name='PyTrace_EXCEPTION' value='1'/>
<enum name='PyTrace_LINE' value='2'/>
<enum name='PyTrace_RETURN' value='3'/>
<enum name='PyTrash_UNWIND_LEVEL' value='50'/>
<enum name='PyWrapperFlag_KEYWORDS' value='1'/>
<enum name='Py_DTSF_ADD_DOT_0' value='2'/>
<enum name='Py_DTSF_ALT' value='4'/>
<enum name='Py_DTSF_SIGN' value='1'/>
<enum name='Py_DTST_FINITE' value='0'/>
<enum name='Py_DTST_INFINITE' value='1'/>
<enum name='Py_DTST_NAN' value='2'/>
<enum name='Py_END_OF_BUFFER' value='-1'/>
<enum name='Py_EQ' value='2'/>
<enum name='Py_GE' value='5'/>
<enum name='Py_GT' value='4'/>
<enum name='Py_HUGE_VAL' value='+Inf'/>
<enum name='Py_INVALID_SIZE' value='-1'/>
<enum name='Py_LE' value='1'/>
<enum name='Py_LT' value='0'/>
<enum name='Py_MARSHAL_VERSION' value='2'/>
<enum name='Py_MATH_E' value='2.7182818284590452354'/>
<enum name='Py_MATH_El' value='2.7182818284590452353602874713526625L'/>
<enum name='Py_MATH_PI' value='3.14159265358979323846'/>
<enum name='Py_MATH_PIl' value='3.1415926535897932384626433832795029L'/>
<enum name='Py_NAN' value='NaN'/>
<enum name='Py_NE' value='3'/>
<enum name='Py_PRINT_RAW' value='1'/>
<enum name='Py_TPFLAGS_BASETYPE' value='1024'/>
<enum name='Py_TPFLAGS_BASE_EXC_SUBCLASS' value='1073741824'/>
<enum name='Py_TPFLAGS_BYTES_SUBCLASS' value='134217728'/>
<enum name='Py_TPFLAGS_CHECKTYPES' value='16'/>
<enum name='Py_TPFLAGS_DEFAULT' value='131563'/>
<enum name='Py_TPFLAGS_DEFAULT_CORE' value='393707'/>
<enum name='Py_TPFLAGS_DEFAULT_EXTERNAL' value='131563'/>
<enum name='Py_TPFLAGS_DICT_SUBCLASS' value='536870912'/>
<enum name='Py_TPFLAGS_GC' value='0'/>
<enum name='Py_TPFLAGS_HAVE_CLASS' value='256'/>
<enum name='Py_TPFLAGS_HAVE_GC' value='16384'/>
<enum name='Py_TPFLAGS_HAVE_GETCHARBUFFER' value='1'/>
<enum name='Py_TPFLAGS_HAVE_INDEX' value='131072'/>
<enum name='Py_TPFLAGS_HAVE_INPLACEOPS' value='8'/>
<enum name='Py_TPFLAGS_HAVE_ITER' value='128'/>
<enum name='Py_TPFLAGS_HAVE_NEWBUFFER' value='2097152'/>
<enum name='Py_TPFLAGS_HAVE_RICHCOMPARE' value='32'/>
<enum name='Py_TPFLAGS_HAVE_SEQUENCE_IN' value='2'/>
<enum name='Py_TPFLAGS_HAVE_STACKLESS_EXTENSION' value='0'/>
<enum name='Py_TPFLAGS_HAVE_VERSION_TAG' value='262144'/>
<enum name='Py_TPFLAGS_HAVE_WEAKREFS' value='64'/>
<enum name='Py_TPFLAGS_HEAPTYPE' value='512'/>
<enum name='Py_TPFLAGS_INT_SUBCLASS' value='8388608'/>
<enum name='Py_TPFLAGS_IS_ABSTRACT' value='1048576'/>
<enum name='Py_TPFLAGS_LIST_SUBCLASS' value='33554432'/>
<enum name='Py_TPFLAGS_LONG_SUBCLASS' value='16777216'/>
<enum name='Py_TPFLAGS_READY' value='4096'/>
<enum name='Py_TPFLAGS_READYING' value='8192'/>
<enum name='Py_TPFLAGS_STRING_SUBCLASS' value='134217728'/>
<enum name='Py_TPFLAGS_TUPLE_SUBCLASS' value='67108864'/>
<enum name='Py_TPFLAGS_TYPE_SUBCLASS' value='-2147483648' value64='2147483648'/>
<enum name='Py_TPFLAGS_UNICODE_SUBCLASS' value='268435456'/>
<enum name='Py_TPFLAGS_VALID_VERSION_TAG' value='524288'/>
<enum name='Py_UNICODE_REPLACEMENT_CHARACTER' value='65533'/>
<enum name='Py_UNICODE_SIZE' value='2'/>
<enum name='Py_USING_UNICODE' value='1'/>
<enum name='Py_eval_input' value='258'/>
<enum name='Py_file_input' value='257'/>
<enum name='Py_single_input' value='256'/>
<enum name='RAISE_VARARGS' value='130'/>
<enum name='RBRACE' value='27'/>
<enum name='READONLY' value='1'/>
<enum name='READ_RESTRICTED' value='2'/>
<enum name='RESTRICTED' value='6'/>
<enum name='RETURN_VALUE' value='83'/>
<enum name='RHS' value='258'/>
<enum name='RIGHTSHIFT' value='35'/>
<enum name='RIGHTSHIFTEQUAL' value='46'/>
<enum name='RO' value='1'/>
<enum name='ROT_FOUR' value='5'/>
<enum name='ROT_THREE' value='3'/>
<enum name='ROT_TWO' value='2'/>
<enum name='RPAR' value='8'/>
<enum name='RSQB' value='10'/>
<enum name='RShift' value='8'/>
<enum name='RULE' value='257'/>
<enum name='Raise_kind' value='12'/>
<enum name='Repr_kind' value='15'/>
<enum name='Return_kind' value='3'/>
<enum name='SCOPE_MASK' value='7'/>
<enum name='SCOPE_OFF' value='11'/>
<enum name='SEMI' value='13'/>
<enum name='SEP' value='47'/>
<enum name='SETUP_EXCEPT' value='121'/>
<enum name='SETUP_FINALLY' value='122'/>
<enum name='SETUP_LOOP' value='120'/>
<enum name='SETUP_WITH' value='143'/>
<enum name='SET_ADD' value='146'/>
<enum name='SHIFT' value='15' value64='30'/>
<enum name='SIZEOF_DOUBLE' value='8'/>
<enum name='SIZEOF_FLOAT' value='4'/>
<enum name='SIZEOF_FPOS_T' value='8'/>
<enum name='SIZEOF_INT' value='4'/>
<enum name='SIZEOF_LONG' value='4' value64='8'/>
<enum name='SIZEOF_LONG_DOUBLE' value='16'/>
<enum name='SIZEOF_LONG_LONG' value='8'/>
<enum name='SIZEOF_OFF_T' value='8'/>
<enum name='SIZEOF_PID_T' value='4'/>
<enum name='SIZEOF_PTHREAD_T' value='4' value64='8'/>
<enum name='SIZEOF_SHORT' value='2'/>
<enum name='SIZEOF_SIZE_T' value='4' value64='8'/>
<enum name='SIZEOF_TIME_T' value='4' value64='8'/>
<enum name='SIZEOF_UINTPTR_T' value='4' value64='8'/>
<enum name='SIZEOF_VOID_P' value='4' value64='8'/>
<enum name='SIZEOF_WCHAR_T' value='4'/>
<enum name='SIZEOF__BOOL' value='1'/>
<enum name='SLASH' value='17'/>
<enum name='SLASHEQUAL' value='40'/>
<enum name='SLICE' value='30'/>
<enum name='SSTATE_INTERNED_IMMORTAL' value='2'/>
<enum name='SSTATE_INTERNED_MORTAL' value='1'/>
<enum name='SSTATE_NOT_INTERNED' value='0'/>
<enum name='STAR' value='16'/>
<enum name='STAREQUAL' value='39'/>
<enum name='STDC_HEADERS' value='1'/>
<enum name='STOP_CODE' value='0'/>
<enum name='STORE_ATTR' value='95'/>
<enum name='STORE_DEREF' value='137'/>
<enum name='STORE_FAST' value='125'/>
<enum name='STORE_GLOBAL' value='97'/>
<enum name='STORE_MAP' value='54'/>
<enum name='STORE_NAME' value='90'/>
<enum name='STORE_SLICE' value='40'/>
<enum name='STORE_SUBSCR' value='60'/>
<enum name='STRING' value='3'/>
<enum name='SYS_SELECT_WITH_SYS_TIME' value='1'/>
<enum name='SetComp_kind' value='9'/>
<enum name='Set_kind' value='7'/>
<enum name='Slice_kind' value='2'/>
<enum name='Store' value='2'/>
<enum name='Str_kind' value='17'/>
<enum name='Sub' value='2'/>
<enum name='Subscript_kind' value='19'/>
<enum name='Suite_kind' value='4'/>
<enum name='TANH_PRESERVES_ZERO_SIGN' value='1'/>
<enum name='TILDE' value='32'/>
<enum name='TIME_WITH_SYS_TIME' value='1'/>
<enum name='T_BOOL' value='14'/>
<enum name='T_BYTE' value='8'/>
<enum name='T_CHAR' value='7'/>
<enum name='T_DOUBLE' value='4'/>
<enum name='T_FLOAT' value='3'/>
<enum name='T_INT' value='1'/>
<enum name='T_LONG' value='2'/>
<enum name='T_LONGLONG' value='17'/>
<enum name='T_OBJECT' value='6'/>
<enum name='T_OBJECT_EX' value='16'/>
<enum name='T_PYSSIZET' value='19'/>
<enum name='T_SHORT' value='0'/>
<enum name='T_STRING' value='5'/>
<enum name='T_STRING_INPLACE' value='13'/>
<enum name='T_UBYTE' value='9'/>
<enum name='T_UINT' value='11'/>
<enum name='T_ULONG' value='12'/>
<enum name='T_ULONGLONG' value='18'/>
<enum name='T_USHORT' value='10'/>
<enum name='TryExcept_kind' value='13'/>
<enum name='TryFinally_kind' value='14'/>
<enum name='Tuple_kind' value='22'/>
<enum name='UAdd' value='3'/>
<enum name='UNARY_CONVERT' value='13'/>
<enum name='UNARY_INVERT' value='15'/>
<enum name='UNARY_NEGATIVE' value='11'/>
<enum name='UNARY_NOT' value='12'/>
<enum name='UNARY_POSITIVE' value='10'/>
<enum name='UNPACK_SEQUENCE' value='92'/>
<enum name='USE' value='8'/>
<enum name='USE_TOOLBOX_OBJECT_GLUE' value='1'/>
<enum name='USub' value='4'/>
<enum name='UnaryOp_kind' value='3'/>
<enum name='VA_LIST_IS_ARRAY' value64='1'/>
<enum name='VBAR' value='18'/>
<enum name='VBAREQUAL' value='43'/>
<enum name='WAIT_LOCK' value='1'/>
<enum name='WINDOW_HAS_FLAGS' value='1'/>
<enum name='WITH_CLEANUP' value='81'/>
<enum name='WITH_CYCLE_GC' value='1'/>
<enum name='WITH_DOC_STRINGS' value='1'/>
<enum name='WITH_DYLD' value='1'/>
<enum name='WITH_NEXT_FRAMEWORK' value='1'/>
<enum name='WITH_PYMALLOC' value='1'/>
<enum name='WITH_THREAD' value='1'/>
<enum name='While_kind' value='9'/>
<enum name='With_kind' value='11'/>
<enum name='YIELD_VALUE' value='86'/>
<enum name='Yield_kind' value='12'/>
<enum name='and_expr' value='312'/>
<enum name='and_test' value='306'/>
<enum name='arglist' value='330'/>
<enum name='argument' value='331'/>
<enum name='arith_expr' value='314'/>
<enum name='assert_stmt' value='291'/>
<enum name='atom' value='318'/>
<enum name='augassign' value='271'/>
<enum name='break_stmt' value='276'/>
<enum name='classdef' value='329'/>
<enum name='comp_for' value='336'/>
<enum name='comp_if' value='337'/>
<enum name='comp_iter' value='335'/>
<enum name='comp_op' value='309'/>
<enum name='comparison' value='308'/>
<enum name='compound_stmt' value='292'/>
<enum name='continue_stmt' value='277'/>
<enum name='decorated' value='261'/>
<enum name='decorator' value='259'/>
<enum name='decorators' value='260'/>
<enum name='del_stmt' value='273'/>
<enum name='dictorsetmaker' value='328'/>
<enum name='dotted_as_name' value='285'/>
<enum name='dotted_as_names' value='287'/>
<enum name='dotted_name' value='288'/>
<enum name='encoding_decl' value='339'/>
<enum name='eval_input' value='258'/>
<enum name='except_clause' value='299'/>
<enum name='exec_stmt' value='290'/>
<enum name='expr' value='310'/>
<enum name='expr_stmt' value='270'/>
<enum name='exprlist' value='326'/>
<enum name='factor' value='316'/>
<enum name='file_input' value='257'/>
<enum name='flow_stmt' value='275'/>
<enum name='for_stmt' value='295'/>
<enum name='fpdef' value='265'/>
<enum name='fplist' value='266'/>
<enum name='funcdef' value='262'/>
<enum name='global_stmt' value='289'/>
<enum name='if_stmt' value='293'/>
<enum name='import_as_name' value='284'/>
<enum name='import_as_names' value='286'/>
<enum name='import_from' value='283'/>
<enum name='import_name' value='282'/>
<enum name='import_stmt' value='281'/>
<enum name='lambdef' value='321'/>
<enum name='list_for' value='333'/>
<enum name='list_if' value='334'/>
<enum name='list_iter' value='332'/>
<enum name='listmaker' value='319'/>
<enum name='not_test' value='307'/>
<enum name='old_lambdef' value='303'/>
<enum name='old_test' value='302'/>
<enum name='or_test' value='305'/>
<enum name='parameters' value='263'/>
<enum name='pass_stmt' value='274'/>
<enum name='power' value='317'/>
<enum name='print_stmt' value='272'/>
<enum name='raise_stmt' value='280'/>
<enum name='return_stmt' value='278'/>
<enum name='shift_expr' value='313'/>
<enum name='simple_stmt' value='268'/>
<enum name='single_input' value='256'/>
<enum name='sliceop' value='325'/>
<enum name='small_stmt' value='269'/>
<enum name='stmt' value='267'/>
<enum name='subscript' value='324'/>
<enum name='subscriptlist' value='323'/>
<enum name='suite' value='300'/>
<enum name='term' value='315'/>
<enum name='test' value='304'/>
<enum name='testlist' value='327'/>
<enum name='testlist1' value='338'/>
<enum name='testlist_comp' value='320'/>
<enum name='testlist_safe' value='301'/>
<enum name='trailer' value='322'/>
<enum name='try_stmt' value='296'/>
<enum name='varargslist' value='264'/>
<enum name='while_stmt' value='294'/>
<enum name='with_item' value='298'/>
<enum name='with_stmt' value='297'/>
<enum name='xor_expr' value='311'/>
<enum name='yield_expr' value='340'/>
<enum name='yield_stmt' value='279'/>
<function name='AEDesc_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval type='i'/>
</function>
<function name='AEDesc_New'>
<arg type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='AEDesc_NewBorrowed'>
<arg type='^{AEDesc=I^^{OpaqueAEDataStorageType}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFArrayRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFArray}'/>
<retval type='i'/>
</function>
<function name='CFArrayRefObj_New'>
<arg type='^{__CFArray=}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFDictionaryRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFDictionary}'/>
<retval type='i'/>
</function>
<function name='CFDictionaryRefObj_New'>
<arg type='^{__CFDictionary=}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFMutableArrayRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFArray}'/>
<retval type='i'/>
</function>
<function name='CFMutableArrayRefObj_New'>
<arg type='^{__CFArray=}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFMutableDictionaryRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFDictionary}'/>
<retval type='i'/>
</function>
<function name='CFMutableDictionaryRefObj_New'>
<arg type='^{__CFDictionary=}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFMutableStringRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFString}'/>
<retval type='i'/>
</function>
<function name='CFMutableStringRefObj_New'>
<arg type='^{__CFString=}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^v'/>
<retval type='i'/>
</function>
<function name='CFObj_New'>
<arg type='@'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFStringRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFString}'/>
<retval type='i'/>
</function>
<function name='CFStringRefObj_New'>
<arg type='^{__CFString=}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFTypeRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^v'/>
<retval type='i'/>
</function>
<function name='CFTypeRefObj_New'>
<arg type='@'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CFURLRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFURL}'/>
<retval type='i'/>
</function>
<function name='CFURLRefObj_New'>
<arg type='^{__CFURL=}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CmpInstObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{ComponentInstanceRecord}'/>
<retval type='i'/>
</function>
<function name='CmpInstObj_New'>
<arg type='^{ComponentInstanceRecord=[1l]}' type64='^{ComponentInstanceRecord=[1q]}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='CmpObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{ComponentRecord}'/>
<retval type='i'/>
</function>
<function name='CmpObj_New'>
<arg type='^{ComponentRecord=[1l]}' type64='^{ComponentRecord=[1q]}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='OptResObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^*'/>
<retval type='i'/>
</function>
<function name='OptResObj_New'>
<arg type='^*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='OptionalCFURLRefObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{__CFURL}'/>
<retval type='i'/>
</function>
<function name='PyAST_Check'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyAST_Compile'>
<arg type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
<arg type='*'/>
<arg type='^{_PyCompilerFlags=i}'/>
<arg type='^{_arena=}'/>
<retval type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
</function>
<function name='PyAST_FromNode'>
<arg type='^i'/>
<arg type='^{_PyCompilerFlags=i}'/>
<arg type='*'/>
<arg type='^{_arena=}'/>
<retval type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
</function>
<function name='PyAST_mod2obj'>
<arg type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyAST_obj2mod'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_arena=}'/>
<arg type='i'/>
<retval type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
</function>
<function name='PyArena_AddPyObject'>
<arg type='^{_arena=}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyArena_Free'>
<arg type='^{_arena=}'/>
</function>
<function name='PyArena_Malloc'>
<arg type='^{_arena=}'/>
<arg type='L' type64='Q'/>
<retval type='^v'/>
</function>
<function name='PyArena_New'>
<retval type='^{_arena=}'/>
</function>
<function name='PyArg_Parse' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyArg_ParseTuple' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyArg_ParseTupleAndKeywords' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='^*'/>
<retval type='i'/>
</function>
<function name='PyArg_UnpackTuple' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyArg_VaParse'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval type='i'/>
</function>
<function name='PyArg_VaParseTupleAndKeywords'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='^*'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval type='i'/>
</function>
<function name='PyBool_FromLong'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyBuffer_FillContiguousStrides'>
<arg type='i'/>
<arg type='^i' type64='^q'/>
<arg type='^i' type64='^q'/>
<arg type='i'/>
<arg type='c'/>
</function>
<function name='PyBuffer_FillInfo'>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^v'/>
<arg type='l' type64='q'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyBuffer_FromContiguous'>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
<arg type='^v'/>
<arg type='l' type64='q'/>
<arg type='c'/>
<retval type='i'/>
</function>
<function name='PyBuffer_FromMemory'>
<arg type='^v'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyBuffer_FromObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyBuffer_FromReadWriteMemory'>
<arg type='^v'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyBuffer_FromReadWriteObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyBuffer_GetPointer'>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
<arg type='^i' type64='^q'/>
<retval type='^v'/>
</function>
<function name='PyBuffer_IsContiguous'>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
<arg type='c'/>
<retval type='i'/>
</function>
<function name='PyBuffer_New'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyBuffer_Release'>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
</function>
<function name='PyBuffer_SizeFromFormat'>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyBuffer_ToContiguous'>
<arg type='^v'/>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
<arg type='l' type64='q'/>
<arg type='c'/>
<retval type='i'/>
</function>
<function name='PyByteArray_AsString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='PyByteArray_Concat'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyByteArray_Fini'/>
<function name='PyByteArray_FromObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyByteArray_FromStringAndSize'>
<arg type='*'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyByteArray_Init'>
<retval type='i'/>
</function>
<function name='PyByteArray_Resize'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyByteArray_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyCFunction_Call'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCFunction_ClearFreeList'>
<retval type='i'/>
</function>
<function name='PyCFunction_Fini'/>
<function name='PyCFunction_GetFlags'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyCFunction_GetFunction'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^?' function_pointer='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</retval>
</function>
<function name='PyCFunction_GetSelf'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCFunction_NewEx'>
<arg type='^{PyMethodDef=*^?i*}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCObject_AsVoidPtr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^v'/>
</function>
<function name='PyCObject_FromVoidPtr'>
<arg type='^v'/>
<arg type='^?' function_pointer='true'>
<arg type='^v'/>
<retval type='v'/>
</arg>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCObject_FromVoidPtrAndDesc'>
<arg type='^v'/>
<arg type='^v'/>
<arg type='^?' function_pointer='true'>
<arg type='^v'/>
<arg type='^v'/>
<retval type='v'/>
</arg>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCObject_GetDesc'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^v'/>
</function>
<function name='PyCObject_Import'>
<arg type='*'/>
<arg type='*'/>
<retval type='^v'/>
</function>
<function name='PyCObject_SetVoidPtr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='PyCallIter_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCallable_Check'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyCapsule_GetContext'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^v'/>
</function>
<function name='PyCapsule_GetDestructor'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^?' function_pointer='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='v'/>
</retval>
</function>
<function name='PyCapsule_GetName'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='PyCapsule_GetPointer'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^v'/>
</function>
<function name='PyCapsule_Import'>
<arg type='*'/>
<arg type='i'/>
<retval type='^v'/>
</function>
<function name='PyCapsule_IsValid'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyCapsule_New'>
<arg type='^v'/>
<arg type='*'/>
<arg type='^?' function_pointer='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='v'/>
</arg>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCapsule_SetContext'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='PyCapsule_SetDestructor'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^?' function_pointer='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='v'/>
</arg>
<retval type='i'/>
</function>
<function name='PyCapsule_SetName'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyCapsule_SetPointer'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='PyCell_Get'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCell_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCell_Set'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyClassMethod_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyClass_IsSubclass'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyClass_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCode_Addr2Line'>
<arg type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyCode_New'>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
</function>
<function name='PyCode_NewEmpty'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<retval type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
</function>
<function name='PyCode_Optimize'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_BackslashReplaceErrors'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_Decode'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_Decoder'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_Encode'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_Encoder'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_IgnoreErrors'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_IncrementalDecoder'>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_IncrementalEncoder'>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_LookupError'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_Register'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyCodec_RegisterError'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyCodec_ReplaceErrors'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_StreamReader'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_StreamWriter'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_StrictErrors'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyCodec_XMLCharRefReplaceErrors'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyComplex_AsCComplex'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='{_Py_complex=dd}'/>
</function>
<function name='PyComplex_FromCComplex'>
<arg type='{_Py_complex=dd}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyComplex_FromDoubles'>
<arg type='d'/>
<arg type='d'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyComplex_ImagAsDouble'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='d'/>
</function>
<function name='PyComplex_RealAsDouble'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='d'/>
</function>
<function name='PyDescr_NewClassMethod'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{PyMethodDef=*^?i*}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDescr_NewGetSet'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{PyGetSetDef=*^?^?*^v}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDescr_NewMember'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{PyMemberDef=*iii*}' type64='^{PyMemberDef=*iqi*}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDescr_NewMethod'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{PyMethodDef=*^?i*}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDescr_NewWrapper'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{wrapperbase=*i^v^?*i^{_object}}'/>
<arg type='^v'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDictProxy_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_Clear'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_Contains'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyDict_Copy'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_DelItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyDict_DelItemString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyDict_Fini'/>
<function name='PyDict_GetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_GetItemString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_Items'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_Keys'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_Merge'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyDict_MergeFromSeq2'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyDict_New'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyDict_Next'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i' type64='^q'/>
<arg type='^^{_object}'/>
<arg type='^^{_object}'/>
<retval type='i'/>
</function>
<function name='PyDict_SetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyDict_SetItemString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyDict_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyDict_Update'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyDict_Values'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_BadArgument'>
<retval type='i'/>
</function>
<function name='PyErr_BadInternalCall'/>
<function name='PyErr_CheckSignals'>
<retval type='i'/>
</function>
<function name='PyErr_Clear'/>
<function name='PyErr_Display'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_ExceptionMatches'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyErr_Fetch'>
<arg type='^^{_object}'/>
<arg type='^^{_object}'/>
<arg type='^^{_object}'/>
</function>
<function name='PyErr_Format' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*' printf_format='true'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_GivenExceptionMatches'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyErr_Mac'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_NewException'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_NewExceptionWithDoc'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_NoMemory'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_NormalizeException'>
<arg type='^^{_object}'/>
<arg type='^^{_object}'/>
<arg type='^^{_object}'/>
</function>
<function name='PyErr_Occurred'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_Print'/>
<function name='PyErr_PrintEx'>
<arg type='i'/>
</function>
<function name='PyErr_ProgramText'>
<arg type='*'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_Restore'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_SetFromErrno'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_SetFromErrnoWithFilename'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_SetFromErrnoWithFilenameObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_SetInterrupt'/>
<function name='PyErr_SetNone'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_SetObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyErr_SetString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
</function>
<function name='PyErr_SyntaxLocation'>
<arg type='*'/>
<arg type='i'/>
</function>
<function name='PyErr_WarnEx'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyErr_WarnExplicit'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyErr_WriteUnraisable'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_AcquireLock'/>
<function name='PyEval_AcquireThread'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyEval_CallFunction' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_CallMethod' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_CallObjectWithKeywords'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_EvalCode'>
<arg type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_EvalCodeEx'>
<arg type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^{_object}'/>
<arg type='i'/>
<arg type='^^{_object}'/>
<arg type='i'/>
<arg type='^^{_object}'/>
<arg type='i'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_EvalFrame'>
<arg type='^{_frame=i^{_typeobject}i^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}' type64='^{_frame=q^{_typeobject}q^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_EvalFrameEx'>
<arg type='^{_frame=i^{_typeobject}i^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}' type64='^{_frame=q^{_typeobject}q^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_GetBuiltins'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_GetCallStats'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_GetFrame'>
<retval type='^{_frame=i^{_typeobject}i^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}' type64='^{_frame=q^{_typeobject}q^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}'/>
</function>
<function name='PyEval_GetFuncDesc'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='PyEval_GetFuncName'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='PyEval_GetGlobals'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_GetLocals'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_GetRestricted'>
<retval type='i'/>
</function>
<function name='PyEval_InitThreads'/>
<function name='PyEval_MergeCompilerFlags'>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='i'/>
</function>
<function name='PyEval_ReInitThreads'/>
<function name='PyEval_ReleaseLock'/>
<function name='PyEval_ReleaseThread'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyEval_RestoreThread'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyEval_SaveThread'>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyEval_SetProfile'>
<arg type='^?' function_pointer='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_frame=i^{_typeobject}i^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}' type64='^{_frame=q^{_typeobject}q^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}'/>
<arg type='i'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</arg>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_SetTrace'>
<arg type='^?' function_pointer='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_frame=i^{_typeobject}i^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}' type64='^{_frame=q^{_typeobject}q^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}'/>
<arg type='i'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</arg>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyEval_ThreadsInitialized'>
<retval type='i'/>
</function>
<function name='PyFile_AsFile'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
</function>
<function name='PyFile_DecUseCount'>
<arg type='^{_PyFileObject=i^{_typeobject}^{__sFILE}^{_object}^{_object}^?ii****iii^{_object}^{_object}^{_object}iii}' type64='^{_PyFileObject=q^{_typeobject}^{__sFILE}^{_object}^{_object}^?ii****iii^{_object}^{_object}^{_object}iii}'/>
</function>
<function name='PyFile_FromFile'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^?' function_pointer='true'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval type='i'/>
</arg>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFile_FromString'>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFile_GetLine'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFile_IncUseCount'>
<arg type='^{_PyFileObject=i^{_typeobject}^{__sFILE}^{_object}^{_object}^?ii****iii^{_object}^{_object}^{_object}iii}' type64='^{_PyFileObject=q^{_typeobject}^{__sFILE}^{_object}^{_object}^?ii****iii^{_object}^{_object}^{_object}iii}'/>
</function>
<function name='PyFile_Name'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFile_SetBufSize'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
</function>
<function name='PyFile_SetEncoding'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyFile_SetEncodingAndErrors'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyFile_SoftSpace'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyFile_WriteObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyFile_WriteString'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyFloat_AsDouble'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='d'/>
</function>
<function name='PyFloat_AsReprString'>
<arg type='*'/>
<arg type='^{_PyFloatObject=i^{_typeobject}d}' type64='^{_PyFloatObject=q^{_typeobject}d}'/>
</function>
<function name='PyFloat_AsString'>
<arg type='*'/>
<arg type='^{_PyFloatObject=i^{_typeobject}d}' type64='^{_PyFloatObject=q^{_typeobject}d}'/>
</function>
<function name='PyFloat_ClearFreeList'>
<retval type='i'/>
</function>
<function name='PyFloat_Fini'/>
<function name='PyFloat_FromDouble'>
<arg type='d'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFloat_FromString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFloat_GetInfo'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFloat_GetMax'>
<retval type='d'/>
</function>
<function name='PyFloat_GetMin'>
<retval type='d'/>
</function>
<function name='PyFrame_BlockPop'>
<arg type='^{_PyTryBlock=iii}'/>
<retval type='^{_PyTryBlock=iii}'/>
</function>
<function name='PyFrame_BlockSetup'>
<arg type='^{_PyTryBlock=iii}'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
</function>
<function name='PyFrame_ClearFreeList'>
<retval type='i'/>
</function>
<function name='PyFrame_ExtendStack'>
<arg type='^{_PyTryBlock=iii}'/>
<arg type='i'/>
<arg type='i'/>
<retval type='^^{_object}'/>
</function>
<function name='PyFrame_FastToLocals'>
<arg type='^{_PyTryBlock=iii}'/>
</function>
<function name='PyFrame_Fini'/>
<function name='PyFrame_GetLineNumber'>
<arg type='^{_PyTryBlock=iii}'/>
<retval type='i'/>
</function>
<function name='PyFrame_LocalsToFast'>
<arg type='^{_PyTryBlock=iii}'/>
<arg type='i'/>
</function>
<function name='PyFrame_New'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
<arg type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_PyTryBlock=iii}'/>
</function>
<function name='PyFrozenSet_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFunction_GetClosure'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFunction_GetCode'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFunction_GetDefaults'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFunction_GetGlobals'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFunction_GetModule'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFunction_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyFunction_SetClosure'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyFunction_SetDefaults'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyFuture_FromAST'>
<arg type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
<arg type='*'/>
<retval type='^{_PyFutureFeatures=ii}'/>
</function>
<function name='PyGC_Collect'>
<retval type='l' type64='q'/>
</function>
<function name='PyGILState_Ensure'>
<retval type='i'/>
</function>
<function name='PyGILState_GetThisThreadState'>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyGILState_Release'>
<arg type='i'/>
</function>
<function name='PyGen_NeedsFinalizing'>
<arg type='^{_PyGenObject=i^{_typeobject}^{_frame}i^{_object}^{_object}}' type64='^{_PyGenObject=q^{_typeobject}^{_frame}i^{_object}^{_object}}'/>
<retval type='i'/>
</function>
<function name='PyGen_New'>
<arg type='^{_frame=i^{_typeobject}i^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}' type64='^{_frame=q^{_typeobject}q^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyGrammar_AddAccelerators'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
</function>
<function name='PyGrammar_FindDFA'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<retval type='^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}'/>
</function>
<function name='PyGrammar_LabelRepr'>
<arg type='^{_label=i*}'/>
<retval type='*'/>
</function>
<function name='PyGrammar_RemoveAccelerators'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
</function>
<function name='PyImport_AddModule'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_AppendInittab'>
<arg type='*'/>
<arg type='^?' function_pointer='true'>
<retval type='v'/>
</arg>
<retval type='i'/>
</function>
<function name='PyImport_Cleanup'/>
<function name='PyImport_ExecCodeModule'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_ExecCodeModuleEx'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_ExtendInittab'>
<arg type='^{_inittab=*^?}'/>
<retval type='i'/>
</function>
<function name='PyImport_GetImporter'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_GetMagicNumber'>
<retval type='l' type64='q'/>
</function>
<function name='PyImport_GetModuleDict'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_Import'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_ImportFrozenModule'>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyImport_ImportModule'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_ImportModuleLevel'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_ImportModuleNoBlock'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyImport_ReloadModule'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInstance_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInstance_NewRaw'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInt_AsLong'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyInt_AsSsize_t'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyInt_AsUnsignedLongLongMask'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='Q'/>
</function>
<function name='PyInt_AsUnsignedLongMask'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='L' type64='Q'/>
</function>
<function name='PyInt_ClearFreeList'>
<retval type='i'/>
</function>
<function name='PyInt_Fini'/>
<function name='PyInt_FromLong'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInt_FromSize_t'>
<arg type='L' type64='Q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInt_FromSsize_t'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInt_FromString'>
<arg type='*'/>
<arg type='^*'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInt_FromUnicode'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyInt_GetMax'>
<retval type='l' type64='q'/>
</function>
<function name='PyInterpreterState_Clear'>
<arg type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
</function>
<function name='PyInterpreterState_Delete'>
<arg type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
</function>
<function name='PyInterpreterState_Head'>
<retval type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
</function>
<function name='PyInterpreterState_New'>
<retval type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
</function>
<function name='PyInterpreterState_Next'>
<arg type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
<retval type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
</function>
<function name='PyInterpreterState_ThreadHead'>
<arg type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyIter_Next'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyList_Append'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyList_AsTuple'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyList_Fini'/>
<function name='PyList_GetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyList_GetSlice'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyList_Insert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyList_New'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyList_Reverse'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyList_SetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyList_SetSlice'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyList_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyList_Sort'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyLong_AsDouble'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='d'/>
</function>
<function name='PyLong_AsLong'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyLong_AsLongAndOverflow'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i'/>
<retval type='l' type64='q'/>
</function>
<function name='PyLong_AsLongLong'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='q'/>
</function>
<function name='PyLong_AsLongLongAndOverflow'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i'/>
<retval type='q'/>
</function>
<function name='PyLong_AsSsize_t'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyLong_AsUnsignedLong'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='L' type64='Q'/>
</function>
<function name='PyLong_AsUnsignedLongLong'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='Q'/>
</function>
<function name='PyLong_AsUnsignedLongLongMask'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='Q'/>
</function>
<function name='PyLong_AsUnsignedLongMask'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='L' type64='Q'/>
</function>
<function name='PyLong_AsVoidPtr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^v'/>
</function>
<function name='PyLong_FromDouble'>
<arg type='d'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromLong'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromLongLong'>
<arg type='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromSize_t'>
<arg type='L' type64='Q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromSsize_t'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromString'>
<arg type='*'/>
<arg type='^*'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromUnicode'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromUnsignedLong'>
<arg type='L' type64='Q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromUnsignedLongLong'>
<arg type='Q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_FromVoidPtr'>
<arg type='^v'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyLong_GetInfo'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildEventRecord'>
<arg type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildFSRef'>
<arg type='^{FSRef=[80C]}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildFixed'>
<arg type='l' type64='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildNumVersion'>
<arg type='{NumVersion=CCCC}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildOSType'>
<arg type='L' type64='I'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildOptStr255'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildPoint'>
<arg type='{Point=ss}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildRect'>
<arg type='^{Rect=ssss}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_BuildStr255'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_Buildwide'>
<arg type='^{wide=Ii}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_Error'>
<arg type='s'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_GetEventRecord'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{EventRecord=SLI{Point=ss}S}' type64='^{EventRecord=SQI{Point=ss}S}'/>
<retval type='i'/>
</function>
<function name='PyMac_GetFSRef'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{FSRef=[80C]}'/>
<retval type='i'/>
</function>
<function name='PyMac_GetFixed'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='PyMac_GetOSErrException'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMac_GetOSType'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^I'/>
<retval type='i'/>
</function>
<function name='PyMac_GetPoint'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{Point=ss}'/>
<retval type='i'/>
</function>
<function name='PyMac_GetRect'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{Rect=ssss}'/>
<retval type='i'/>
</function>
<function name='PyMac_GetStr255'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyMac_Getwide'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{wide=Ii}'/>
<retval type='i'/>
</function>
<function name='PyMac_StrError'>
<arg type='i'/>
<retval type='*'/>
</function>
<function name='PyMapping_Check'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyMapping_GetItemString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMapping_HasKey'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyMapping_HasKeyString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyMapping_Length'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyMapping_SetItemString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyMapping_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyMarshal_ReadLastObjectFromFile'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMarshal_ReadLongFromFile'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyMarshal_ReadObjectFromFile'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMarshal_ReadObjectFromString'>
<arg type='*'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMarshal_ReadShortFromFile'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval type='i'/>
</function>
<function name='PyMarshal_WriteLongToFile'>
<arg type='l' type64='q'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='i'/>
</function>
<function name='PyMarshal_WriteObjectToFile'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='i'/>
</function>
<function name='PyMarshal_WriteObjectToString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMem_Free'>
<arg type='^v'/>
</function>
<function name='PyMem_Malloc'>
<arg type='L' type64='Q'/>
<retval type='^v'/>
</function>
<function name='PyMem_Realloc'>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<retval type='^v'/>
</function>
<function name='PyMember_Get'>
<arg type='*'/>
<arg type='^{memberlist=*iii}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMember_GetOne'>
<arg type='*'/>
<arg type='^{PyMemberDef=*iii*}' type64='^{PyMemberDef=*iqi*}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMember_Set'>
<arg type='*'/>
<arg type='^{memberlist=*iii}'/>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyMember_SetOne'>
<arg type='*'/>
<arg type='^{PyMemberDef=*iii*}' type64='^{PyMemberDef=*iqi*}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyMemoryView_FromBuffer'>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMemoryView_FromObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMemoryView_GetContiguous'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<arg type='c'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMethod_Class'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMethod_ClearFreeList'>
<retval type='i'/>
</function>
<function name='PyMethod_Fini'/>
<function name='PyMethod_Function'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMethod_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyMethod_Self'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyModule_AddIntConstant'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyModule_AddObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyModule_AddStringConstant'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyModule_GetDict'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyModule_GetFilename'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='PyModule_GetName'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='PyModule_New'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNode_AddChild'>
<arg type='^{_node=s*iii^{_node}}'/>
<arg type='i'/>
<arg type='*'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyNode_Compile'>
<arg type='^{_node=s*iii^{_node}}'/>
<arg type='*'/>
<retval type='^{_PyCodeObject=i^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}' type64='^{_PyCodeObject=q^{_typeobject}iiii^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i^{_object}^v^{_object}}'/>
</function>
<function name='PyNode_Free'>
<arg type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyNode_ListTree'>
<arg type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyNode_New'>
<arg type='i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyNumber_Absolute'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Add'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_And'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_AsSsize_t'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyNumber_Check'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyNumber_Coerce'>
<arg type='^^{_object}'/>
<arg type='^^{_object}'/>
<retval type='i'/>
</function>
<function name='PyNumber_CoerceEx'>
<arg type='^^{_object}'/>
<arg type='^^{_object}'/>
<retval type='i'/>
</function>
<function name='PyNumber_Divide'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Divmod'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Float'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_FloorDivide'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceAdd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceAnd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceDivide'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceFloorDivide'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceLshift'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceMultiply'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceOr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlacePower'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceRemainder'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceRshift'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceSubtract'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceTrueDivide'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_InPlaceXor'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Index'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Int'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Invert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Long'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Lshift'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Multiply'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Negative'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Or'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Positive'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Power'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Remainder'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Rshift'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Subtract'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_ToBase'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_TrueDivide'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyNumber_Xor'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyOS_AfterFork'/>
<function name='PyOS_FiniInterrupts'/>
<function name='PyOS_InitInterrupts'/>
<function name='PyOS_InterruptOccurred'>
<retval type='i'/>
</function>
<function name='PyOS_Readline'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<retval type='*'/>
</function>
<function name='PyOS_ascii_atof'>
<arg type='*'/>
<retval type='d'/>
</function>
<function name='PyOS_ascii_formatd'>
<arg type='*'/>
<arg type='L' type64='Q'/>
<arg type='*'/>
<arg type='d'/>
<retval type='*'/>
</function>
<function name='PyOS_ascii_strtod'>
<arg type='*'/>
<arg type='^*'/>
<retval type='d'/>
</function>
<function name='PyOS_double_to_string'>
<arg type='d'/>
<arg type='c'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^i'/>
<retval type='*'/>
</function>
<function name='PyOS_getsig'>
<arg type='i'/>
<retval type='^?' function_pointer='true'>
<arg type='i'/>
<retval type='v'/>
</retval>
</function>
<function name='PyOS_mystricmp'>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyOS_mystrnicmp'>
<arg type='*'/>
<arg type='*'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyOS_setsig'>
<arg type='i'/>
<arg type='^?' function_pointer='true'>
<arg type='i'/>
<retval type='v'/>
</arg>
<retval type='^?' function_pointer='true'>
<arg type='i'/>
<retval type='v'/>
</retval>
</function>
<function name='PyOS_snprintf' variadic='true'>
<arg type='*'/>
<arg type='L' type64='Q'/>
<arg type='*' printf_format='true'/>
<retval type='i'/>
</function>
<function name='PyOS_string_to_double'>
<arg type='*'/>
<arg type='^*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='d'/>
</function>
<function name='PyOS_strtol'>
<arg type='*'/>
<arg type='^*'/>
<arg type='i'/>
<retval type='l' type64='q'/>
</function>
<function name='PyOS_strtoul'>
<arg type='*'/>
<arg type='^*'/>
<arg type='i'/>
<retval type='L' type64='Q'/>
</function>
<function name='PyOS_vsnprintf'>
<arg type='*'/>
<arg type='L' type64='Q'/>
<arg type='*' printf_format='true'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval type='i'/>
</function>
<function name='PyObject_AsCharBuffer'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^*'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyObject_AsFileDescriptor'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_AsReadBuffer'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^v'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyObject_AsWriteBuffer'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^v'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyObject_Call'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_CallFunction' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_CallFunctionObjArgs' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_CallMethod' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_CallMethodObjArgs' variadic='true'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_CallObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_CheckReadBuffer'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_ClearWeakRefs'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_Cmp'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i'/>
<retval type='i'/>
</function>
<function name='PyObject_Compare'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_CopyData'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_DelItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_DelItemString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyObject_Dir'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_Format'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_Free'>
<arg type='^v'/>
</function>
<function name='PyObject_GC_Del'>
<arg type='^v'/>
</function>
<function name='PyObject_GC_Track'>
<arg type='^v'/>
</function>
<function name='PyObject_GC_UnTrack'>
<arg type='^v'/>
</function>
<function name='PyObject_GenericGetAttr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_GenericSetAttr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_GetAttr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_GetAttrString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_GetBuffer'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{bufferinfo=^v^{_object}iiii*^i^i^i[2l]^v}' type64='^{bufferinfo=^v^{_object}qqii*^q^q^q[2q]^v}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyObject_GetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_GetIter'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_HasAttr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_HasAttrString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyObject_Hash'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyObject_HashNotImplemented'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyObject_Init'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_InitVar'>
<arg type='^{_PyVarObject=i^{_typeobject}i}' type64='^{_PyVarObject=q^{_typeobject}q}'/>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='l' type64='q'/>
<retval type='^{_PyVarObject=i^{_typeobject}i}' type64='^{_PyVarObject=q^{_typeobject}q}'/>
</function>
<function name='PyObject_IsInstance'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_IsSubclass'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_IsTrue'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_Length'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyObject_Malloc'>
<arg type='L' type64='Q'/>
<retval type='^v'/>
</function>
<function name='PyObject_Not'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_Print'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyObject_Realloc'>
<arg type='^v'/>
<arg type='L' type64='Q'/>
<retval type='^v'/>
</function>
<function name='PyObject_Repr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_RichCompare'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_RichCompareBool'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyObject_SelfIter'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_SetAttr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_SetAttrString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_SetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyObject_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyObject_Str'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_Type'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyObject_Unicode'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyParser_ASTFromFile'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='i'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_PyCompilerFlags=i}'/>
<arg type='^i'/>
<arg type='^{_arena=}'/>
<retval type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
</function>
<function name='PyParser_ASTFromString'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<arg type='^{_PyCompilerFlags=i}'/>
<arg type='^{_arena=}'/>
<retval type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
</function>
<function name='PyParser_ParseFile'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_perrdetail=i*ii*ii}'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_ParseFileFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_perrdetail=i*ii*ii}'/>
<arg type='i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_ParseFileFlagsEx'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_perrdetail=i*ii*ii}'/>
<arg type='^i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_ParseString'>
<arg type='*'/>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='^{_perrdetail=i*ii*ii}'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_ParseStringFlags'>
<arg type='*'/>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='^{_perrdetail=i*ii*ii}'/>
<arg type='i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_ParseStringFlagsFilename'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='^{_perrdetail=i*ii*ii}'/>
<arg type='i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_ParseStringFlagsFilenameEx'>
<arg type='*'/>
<arg type='*'/>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='^{_perrdetail=i*ii*ii}'/>
<arg type='^i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_SetError'>
<arg type='^{_perrdetail=i*ii*ii}'/>
</function>
<function name='PyParser_SimpleParseFileFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='i'/>
<arg type='i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyParser_SimpleParseStringFlags'>
<arg type='*'/>
<arg type='i'/>
<arg type='i'/>
<retval type='^{_node=s*iii^{_node}}'/>
</function>
<function name='PyRun_AnyFileExFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='i'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='i'/>
</function>
<function name='PyRun_AnyFileFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='i'/>
</function>
<function name='PyRun_FileExFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='i'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyRun_InteractiveLoopFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='i'/>
</function>
<function name='PyRun_InteractiveOneFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='i'/>
</function>
<function name='PyRun_SimpleFileExFlags'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<arg type='i'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='i'/>
</function>
<function name='PyRun_SimpleStringFlags'>
<arg type='*'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='i'/>
</function>
<function name='PyRun_StringFlags'>
<arg type='*'/>
<arg type='i'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyST_GetScope'>
<arg type='^{_symtable_entry=i^{_typeobject}^{_object}^{_object}^{_object}^{_object}^{_object}iiib1b1b1b1b1b1iii^{symtable}}' type64='^{_symtable_entry=q^{_typeobject}^{_object}^{_object}^{_object}^{_object}^{_object}iiib1b1b1b1b1b1iii^{symtable}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySeqIter_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_Check'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySequence_Concat'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_Contains'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySequence_Count'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PySequence_DelItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PySequence_DelSlice'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PySequence_Fast'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_GetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_GetSlice'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_In'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySequence_InPlaceConcat'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_InPlaceRepeat'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_Index'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PySequence_Length'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PySequence_List'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_Repeat'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySequence_SetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySequence_SetSlice'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySequence_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PySequence_Tuple'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySet_Add'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySet_Clear'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySet_Contains'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySet_Discard'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySet_Fini'/>
<function name='PySet_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySet_Pop'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySet_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PySignal_SetWakeupFd'>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PySlice_GetIndices'>
<arg type='^{_PySliceObject=i^{_typeobject}^{_object}^{_object}^{_object}}' type64='^{_PySliceObject=q^{_typeobject}^{_object}^{_object}^{_object}}'/>
<arg type='l' type64='q'/>
<arg type='^i' type64='^q'/>
<arg type='^i' type64='^q'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PySlice_GetIndicesEx'>
<arg type='^{_PySliceObject=i^{_typeobject}^{_object}^{_object}^{_object}}' type64='^{_PySliceObject=q^{_typeobject}^{_object}^{_object}^{_object}}'/>
<arg type='l' type64='q'/>
<arg type='^i' type64='^q'/>
<arg type='^i' type64='^q'/>
<arg type='^i' type64='^q'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PySlice_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyStaticMethod_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_AsDecodedObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_AsDecodedString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_AsEncodedObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_AsEncodedString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_AsString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='PyString_AsStringAndSize'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^*'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyString_Concat'>
<arg type='^^{_object}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_ConcatAndDel'>
<arg type='^^{_object}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_Decode'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_DecodeEscape'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_Encode'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_Fini'/>
<function name='PyString_Format'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_FromFormat' variadic='true'>
<arg type='*' printf_format='true'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_FromFormatV'>
<arg type='*' printf_format='true'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_FromString'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_FromStringAndSize'>
<arg type='*'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_InternFromString'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_InternImmortal'>
<arg type='^^{_object}'/>
</function>
<function name='PyString_InternInPlace'>
<arg type='^^{_object}'/>
</function>
<function name='PyString_Repr'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyString_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyStructSequence_InitType'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{PyStructSequence_Desc=**^{PyStructSequence_Field}i}'/>
</function>
<function name='PyStructSequence_New'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySymtable_Build'>
<arg type='^{_mod=i(?={?=^{?}}{?=^{?}}{?=^{_expr}}{?=^{?}})}'/>
<arg type='*'/>
<arg type='^{_PyFutureFeatures=ii}'/>
<retval type='^{symtable=*^{_symtable_entry}^{_symtable_entry}^{_object}^{_object}^{_object}i^{_object}^{?}}'/>
</function>
<function name='PySymtable_Free'>
<arg type='^{symtable=*^{_symtable_entry}^{_symtable_entry}^{_object}^{_object}^{_object}i^{_object}^{?}}'/>
</function>
<function name='PySymtable_Lookup'>
<arg type='^{symtable=*^{_symtable_entry}^{_symtable_entry}^{_object}^{_object}^{_object}i^{_object}^{?}}'/>
<arg type='^v'/>
<retval type='^{_symtable_entry=i^{_typeobject}^{_object}^{_object}^{_object}^{_object}^{_object}iiib1b1b1b1b1b1iii^{symtable}}' type64='^{_symtable_entry=q^{_typeobject}^{_object}^{_object}^{_object}^{_object}^{_object}iiib1b1b1b1b1b1iii^{symtable}}'/>
</function>
<function name='PySys_AddWarnOption'>
<arg type='*'/>
</function>
<function name='PySys_GetFile'>
<arg type='*'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<retval type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
</function>
<function name='PySys_GetObject'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PySys_HasWarnOptions'>
<retval type='i'/>
</function>
<function name='PySys_ResetWarnOptions'/>
<function name='PySys_SetArgv'>
<arg type='i'/>
<arg type='^*'/>
</function>
<function name='PySys_SetArgvEx'>
<arg type='i'/>
<arg type='^*'/>
<arg type='i'/>
</function>
<function name='PySys_SetObject'>
<arg type='*'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PySys_SetPath'>
<arg type='*'/>
</function>
<function name='PySys_WriteStderr' variadic='true'>
<arg type='*' printf_format='true'/>
</function>
<function name='PySys_WriteStdout' variadic='true'>
<arg type='*' printf_format='true'/>
</function>
<function name='PyThreadState_Clear'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyThreadState_Delete'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyThreadState_DeleteCurrent'/>
<function name='PyThreadState_Get'>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyThreadState_GetDict'>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyThreadState_New'>
<arg type='^{_is=^{_is}^{_ts}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}i}'/>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyThreadState_Next'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyThreadState_SetAsyncExc'>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyThreadState_Swap'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='PyThread_ReInitTLS'/>
<function name='PyThread_acquire_lock'>
<arg type='^v'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyThread_allocate_lock'>
<retval type='^v'/>
</function>
<function name='PyThread_create_key'>
<retval type='i'/>
</function>
<function name='PyThread_delete_key'>
<arg type='i'/>
</function>
<function name='PyThread_delete_key_value'>
<arg type='i'/>
</function>
<function name='PyThread_exit_thread'/>
<function name='PyThread_free_lock'>
<arg type='^v'/>
</function>
<function name='PyThread_get_key_value'>
<arg type='i'/>
<retval type='^v'/>
</function>
<function name='PyThread_get_stacksize'>
<retval type='L' type64='Q'/>
</function>
<function name='PyThread_get_thread_ident'>
<retval type='l' type64='q'/>
</function>
<function name='PyThread_init_thread'/>
<function name='PyThread_release_lock'>
<arg type='^v'/>
</function>
<function name='PyThread_set_key_value'>
<arg type='i'/>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='PyThread_set_stacksize'>
<arg type='L' type64='Q'/>
<retval type='i'/>
</function>
<function name='PyThread_start_new_thread'>
<arg type='^?' function_pointer='true'>
<arg type='^v'/>
<retval type='v'/>
</arg>
<arg type='^v'/>
<retval type='l' type64='q'/>
</function>
<function name='PyToken_OneChar'>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyToken_ThreeChars'>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyToken_TwoChars'>
<arg type='i'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='PyTraceBack_Here'>
<arg type='^{_frame=i^{_typeobject}i^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}' type64='^{_frame=q^{_typeobject}q^{_frame}^{?}^{_object}^{_object}^{_object}^^{_object}^^{_object}^{_object}^{_object}^{_object}^{_object}^{_ts}iii[20{?=iii}][1^{_object}]}'/>
<retval type='i'/>
</function>
<function name='PyTraceBack_Print'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyTuple_ClearFreeList'>
<retval type='i'/>
</function>
<function name='PyTuple_Fini'/>
<function name='PyTuple_GetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyTuple_GetSlice'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyTuple_New'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyTuple_Pack' variadic='true'>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyTuple_SetItem'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyTuple_Size'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyType_ClearCache'>
<retval type='I'/>
</function>
<function name='PyType_GenericAlloc'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyType_GenericNew'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyType_IsSubtype'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<retval type='i'/>
</function>
<function name='PyType_Modified'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
</function>
<function name='PyType_Ready'>
<arg type='^{_typeobject=i^{_typeobject}i*ii^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}l*^?^?^?i^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=i^{_typeobject}}^?^?i^?^?^?^?^?^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^{_object=i^{_typeobject}}^?I}' type64='^{_typeobject=q^{_typeobject}q*qq^?^?^?^?^?^?^{_PyNumberMethods=^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?^?}^{_PySequenceMethods=^?^?^?^?^?^?^?^?^?^?}^{_PyMappingMethods=^?^?^?}^?^?^?^?^?^{_PyBufferProcs=^?^?^?^?^?^?}q*^?^?^?q^?^?^{PyMethodDef}^{PyMemberDef}^{PyGetSetDef}^{_typeobject}^{_object=q^{_typeobject}}^?^?q^?^?^?^?^?^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^{_object=q^{_typeobject}}^?I}'/>
<retval type='i'/>
</function>
<function name='PyUnicodeDecodeError_Create'>
<arg type='*'/>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeDecodeError_GetEncoding'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeDecodeError_GetEnd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeDecodeError_GetObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeDecodeError_GetReason'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeDecodeError_GetStart'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeDecodeError_SetEnd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeDecodeError_SetReason'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyUnicodeDecodeError_SetStart'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeEncodeError_Create'>
<arg type='*'/>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeEncodeError_GetEncoding'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeEncodeError_GetEnd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeEncodeError_GetObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeEncodeError_GetReason'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeEncodeError_GetStart'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeEncodeError_SetEnd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeEncodeError_SetReason'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyUnicodeEncodeError_SetStart'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeTranslateError_Create'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeTranslateError_GetEnd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeTranslateError_GetObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeTranslateError_GetReason'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeTranslateError_GetStart'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^i' type64='^q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeTranslateError_SetEnd'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeTranslateError_SetReason'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyUnicodeTranslateError_SetStart'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeUCS2_AsASCIIString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsCharmapString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsEncodedObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsEncodedString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsLatin1String'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsRawUnicodeEscapeString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsUTF16String'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsUTF32String'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsUTF8String'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsUnicode'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^S'/>
</function>
<function name='PyUnicodeUCS2_AsUnicodeEscapeString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_AsWideChar'>
<arg type='^{_PyUnicodeObject=i^{_typeobject}i^Sl^{_object}}' type64='^{_PyUnicodeObject=q^{_typeobject}q^Sq^{_object}}'/>
<arg type='^i'/>
<arg type='l' type64='q'/>
<retval type='l' type64='q'/>
</function>
<function name='PyUnicodeUCS2_ClearFreelist'>
<retval type='i'/>
</function>
<function name='PyUnicodeUCS2_Compare'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyUnicodeUCS2_Concat'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Contains'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='PyUnicodeUCS2_Count'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<retval type='l' type64='q'/>
</function>
<function name='PyUnicodeUCS2_Decode'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeASCII'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeCharmap'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeLatin1'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeRawUnicodeEscape'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeUTF16'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='^i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeUTF16Stateful'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='^i'/>
<arg type='^i' type64='^q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeUTF32'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='^i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeUTF32Stateful'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='^i'/>
<arg type='^i' type64='^q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeUTF8'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeUTF8Stateful'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='^i' type64='^q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_DecodeUnicodeEscape'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Encode'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeASCII'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeCharmap'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeDecimal'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyUnicodeUCS2_EncodeLatin1'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeRawUnicodeEscape'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeUTF16'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeUTF32'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeUTF8'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_EncodeUnicodeEscape'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Find'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='i'/>
<retval type='l' type64='q'/>
</function>
<function name='PyUnicodeUCS2_Format'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromEncodedObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromFormat' variadic='true'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromFormatV'>
<arg type='*'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromOrdinal'>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromString'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromStringAndSize'>
<arg type='*'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromUnicode'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_FromWideChar'>
<arg type='^i'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_GetDefaultEncoding'>
<retval type='*'/>
</function>
<function name='PyUnicodeUCS2_GetMax'>
<retval type='S'/>
</function>
<function name='PyUnicodeUCS2_GetSize'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='l' type64='q'/>
</function>
<function name='PyUnicodeUCS2_Join'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Partition'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_RPartition'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_RSplit'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Replace'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Resize'>
<arg type='^^{_object}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='PyUnicodeUCS2_RichCompare'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_SetDefaultEncoding'>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='PyUnicodeUCS2_Split'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Splitlines'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_Tailmatch'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='i'/>
<retval type='l' type64='q'/>
</function>
<function name='PyUnicodeUCS2_Translate'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicodeUCS2_TranslateCharmap'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicode_BuildEncodingMap'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicode_DecodeUTF7'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicode_DecodeUTF7Stateful'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='^i' type64='^q'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyUnicode_EncodeUTF7'>
<arg type='^S'/>
<arg type='l' type64='q'/>
<arg type='i'/>
<arg type='i'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyWeakref_GetObject'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyWeakref_NewProxy'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyWeakref_NewRef'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='PyWrapper_New'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_AddPendingCall'>
<arg type='^?' function_pointer='true'>
<arg type='^v'/>
<retval type='i'/>
</arg>
<arg type='^v'/>
<retval type='i'/>
</function>
<function name='Py_AtExit'>
<arg type='^?' function_pointer='true'>
<retval type='v'/>
</arg>
<retval type='i'/>
</function>
<function name='Py_BuildValue' variadic='true'>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_CompileStringFlags'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<arg type='^{_PyCompilerFlags=i}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_DecRef'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_EndInterpreter'>
<arg type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='Py_Exit'>
<arg type='i'/>
</function>
<function name='Py_FatalError'>
<arg type='*'/>
</function>
<function name='Py_FdIsInteractive'>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='Py_Finalize'/>
<function name='Py_FindMethod'>
<arg type='^{PyMethodDef=*^?i*}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_FindMethodInChain'>
<arg type='^{PyMethodChain=^{PyMethodDef}^{PyMethodChain}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_FlushLine'>
<retval type='i'/>
</function>
<function name='Py_GetBuildInfo'>
<retval type='*'/>
</function>
<function name='Py_GetCompiler'>
<retval type='*'/>
</function>
<function name='Py_GetCopyright'>
<retval type='*'/>
</function>
<function name='Py_GetExecPrefix'>
<retval type='*'/>
</function>
<function name='Py_GetPath'>
<retval type='*'/>
</function>
<function name='Py_GetPlatform'>
<retval type='*'/>
</function>
<function name='Py_GetPrefix'>
<retval type='*'/>
</function>
<function name='Py_GetProgramFullPath'>
<retval type='*'/>
</function>
<function name='Py_GetProgramName'>
<retval type='*'/>
</function>
<function name='Py_GetPythonHome'>
<retval type='*'/>
</function>
<function name='Py_GetRecursionLimit'>
<retval type='i'/>
</function>
<function name='Py_GetVersion'>
<retval type='*'/>
</function>
<function name='Py_IncRef'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_InitModule4_64'>
<arg type64='*'/>
<arg type64='^{PyMethodDef=*^?i*}'/>
<arg type64='*'/>
<arg type64='^{_object=q^{_typeobject}}'/>
<arg type64='i'/>
<retval type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_Initialize'/>
<function name='Py_InitializeEx'>
<arg type='i'/>
</function>
<function name='Py_IsInitialized'>
<retval type='i'/>
</function>
<function name='Py_Main'>
<arg type='i'/>
<arg type='^*'/>
<retval type='i'/>
</function>
<function name='Py_MakePendingCalls'>
<retval type='i'/>
</function>
<function name='Py_NewInterpreter'>
<retval type='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}l}' type64='^{_ts=^{_ts}^{_is}^{_frame}iii^?^?^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}^{_object}ii^{_object}q}'/>
</function>
<function name='Py_ReprEnter'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='Py_ReprLeave'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='Py_SetProgramName'>
<arg type='*'/>
</function>
<function name='Py_SetPythonHome'>
<arg type='*'/>
</function>
<function name='Py_SetRecursionLimit'>
<arg type='i'/>
</function>
<function name='Py_SubversionRevision'>
<retval type='*'/>
</function>
<function name='Py_SubversionShortBranch'>
<retval type='*'/>
</function>
<function name='Py_SymtableString'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<retval type='^{symtable=*^{_symtable_entry}^{_symtable_entry}^{_object}^{_object}^{_object}i^{_object}^{?}}'/>
</function>
<function name='Py_UniversalNewlineFgets'>
<arg type='*'/>
<arg type='i'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='*'/>
</function>
<function name='Py_UniversalNewlineFread'>
<arg type='*'/>
<arg type='L' type64='Q'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='L' type64='Q'/>
</function>
<function name='Py_VaBuildValue'>
<arg type='*'/>
<arg type='*' type64='^{__va_list_tag=II^v^v}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='ResObj_Convert'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^^*'/>
<retval type='i'/>
</function>
<function name='ResObj_New'>
<arg type='^*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='_PyString_Eq'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='i'/>
</function>
<function name='_PyString_FormatLong'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
<arg type='^*'/>
<arg type='^i'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='_PyString_InsertThousandsGrouping'>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='l' type64='q'/>
<arg type='l' type64='q'/>
<arg type='*'/>
<arg type='*'/>
<retval type='l' type64='q'/>
</function>
<function name='_PyString_Join'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='_PyString_Resize'>
<arg type='^^{_object}'/>
<arg type='l' type64='q'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_AsDefaultEncodedString'>
<arg type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
<arg type='*'/>
<retval type='^{_object=i^{_typeobject}}' type64='^{_object=q^{_typeobject}}'/>
</function>
<function name='_PyUnicodeUCS2_IsAlpha'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsDecimalDigit'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsDigit'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsLinebreak'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsLowercase'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsNumeric'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsTitlecase'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsUppercase'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_IsWhitespace'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_ToDecimalDigit'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_ToDigit'>
<arg type='S'/>
<retval type='i'/>
</function>
<function name='_PyUnicodeUCS2_ToLowercase'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='_PyUnicodeUCS2_ToNumeric'>
<arg type='S'/>
<retval type='d'/>
</function>
<function name='_PyUnicodeUCS2_ToTitlecase'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='_PyUnicodeUCS2_ToUppercase'>
<arg type='S'/>
<retval type='S'/>
</function>
<function name='_Py_c_abs'>
<arg type='{_Py_complex=dd}'/>
<retval type='d'/>
</function>
<function name='_Py_c_diff'>
<arg type='{_Py_complex=dd}'/>
<arg type='{_Py_complex=dd}'/>
<retval type='{_Py_complex=dd}'/>
</function>
<function name='_Py_c_neg'>
<arg type='{_Py_complex=dd}'/>
<retval type='{_Py_complex=dd}'/>
</function>
<function name='_Py_c_pow'>
<arg type='{_Py_complex=dd}'/>
<arg type='{_Py_complex=dd}'/>
<retval type='{_Py_complex=dd}'/>
</function>
<function name='_Py_c_prod'>
<arg type='{_Py_complex=dd}'/>
<arg type='{_Py_complex=dd}'/>
<retval type='{_Py_complex=dd}'/>
</function>
<function name='_Py_c_quot'>
<arg type='{_Py_complex=dd}'/>
<arg type='{_Py_complex=dd}'/>
<retval type='{_Py_complex=dd}'/>
</function>
<function name='_Py_c_sum'>
<arg type='{_Py_complex=dd}'/>
<arg type='{_Py_complex=dd}'/>
<retval type='{_Py_complex=dd}'/>
</function>
<function name='addarc'>
<arg type='^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}'/>
<arg type='i'/>
<arg type='i'/>
<arg type='i'/>
</function>
<function name='addbit'>
<arg type='*'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='adddfa'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='i'/>
<arg type='*'/>
<retval type='^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}'/>
</function>
<function name='addfirstsets'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
</function>
<function name='addlabel'>
<arg type='^{_labellist=i^{_label=i*}}'/>
<arg type='i'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='addstate'>
<arg type='^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}'/>
<retval type='i'/>
</function>
<function name='asdl_int_seq_new'>
<arg type='i'/>
<arg type='^{_arena=}'/>
<retval type='^{_asdl_int_seq=i[1i]}'/>
</function>
<function name='asdl_seq_new'>
<arg type='i'/>
<arg type='^{_arena=}'/>
<retval type='^{_asdl_seq=i[1^v]}'/>
</function>
<function name='delbitset'>
<arg type='*'/>
</function>
<function name='findlabel'>
<arg type='^{_labellist=i^{_label=i*}}'/>
<arg type='i'/>
<arg type='*'/>
<retval type='i'/>
</function>
<function name='mergebitset'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
</function>
<function name='meta_grammar'>
<retval type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
</function>
<function name='newbitset'>
<arg type='i'/>
<retval type='*'/>
</function>
<function name='newgrammar'>
<arg type='i'/>
<retval type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
</function>
<function name='pgen'>
<arg type='^{_node=s*iii^{_node}}'/>
<retval type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
</function>
<function name='printgrammar'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
</function>
<function name='printnonterminals'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
<arg type='^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}'/>
</function>
<function name='samebitset'>
<arg type='*'/>
<arg type='*'/>
<arg type='i'/>
<retval type='i'/>
</function>
<function name='translatelabels'>
<arg type='^{_grammar=i^{_dfa=i*ii^{_state=i^{_arc=ss}ii^ii}*}{_labellist=i^{_label=i*}}ii}'/>
</function>
<function_alias original='PyString_AsString' name='PyBytes_AsString'/>
<function_alias original='PyString_AsStringAndSize' name='PyBytes_AsStringAndSize'/>
<function_alias original='PyString_Concat' name='PyBytes_Concat'/>
<function_alias original='PyString_ConcatAndDel' name='PyBytes_ConcatAndDel'/>
<function_alias original='PyString_DecodeEscape' name='PyBytes_DecodeEscape'/>
<function_alias original='PyString_Format' name='PyBytes_Format'/>
<function_alias original='PyString_FromFormat' name='PyBytes_FromFormat'/>
<function_alias original='PyString_FromFormatV' name='PyBytes_FromFormatV'/>
<function_alias original='PyString_FromString' name='PyBytes_FromString'/>
<function_alias original='PyString_FromStringAndSize' name='PyBytes_FromStringAndSize'/>
<function_alias original='PyString_Repr' name='PyBytes_Repr'/>
<function_alias original='PyString_Size' name='PyBytes_Size'/>
<function_alias original='PyMapping_Size' name='PyMapping_Length'/>
<function_alias original='free' name='PyMem_DEL'/>
<function_alias original='PyMem_Free' name='PyMem_Del'/>
<function_alias original='free' name='PyMem_FREE'/>
<function_alias original='PyOS_mystricmp' name='PyOS_stricmp'/>
<function_alias original='PyOS_mystrnicmp' name='PyOS_strnicmp'/>
<function_alias original='PyObject_Str' name='PyObject_Bytes'/>
<function_alias original='PyObject_Free' name='PyObject_DEL'/>
<function_alias original='PyObject_Free' name='PyObject_Del'/>
<function_alias original='PyObject_Free' name='PyObject_FREE'/>
<function_alias original='PyObject_Size' name='PyObject_Length'/>
<function_alias original='PyObject_Malloc' name='PyObject_MALLOC'/>
<function_alias original='PyObject_Realloc' name='PyObject_REALLOC'/>
<function_alias original='PySequence_Contains' name='PySequence_In'/>
<function_alias original='PySequence_Size' name='PySequence_Length'/>
<function_alias original='PyUnicodeUCS2_AsASCIIString' name='PyUnicode_AsASCIIString'/>
<function_alias original='PyUnicodeUCS2_AsCharmapString' name='PyUnicode_AsCharmapString'/>
<function_alias original='PyUnicodeUCS2_AsEncodedObject' name='PyUnicode_AsEncodedObject'/>
<function_alias original='PyUnicodeUCS2_AsEncodedString' name='PyUnicode_AsEncodedString'/>
<function_alias original='PyUnicodeUCS2_AsLatin1String' name='PyUnicode_AsLatin1String'/>
<function_alias original='PyUnicodeUCS2_AsRawUnicodeEscapeString' name='PyUnicode_AsRawUnicodeEscapeString'/>
<function_alias original='PyUnicodeUCS2_AsUTF16String' name='PyUnicode_AsUTF16String'/>
<function_alias original='PyUnicodeUCS2_AsUTF32String' name='PyUnicode_AsUTF32String'/>
<function_alias original='PyUnicodeUCS2_AsUTF8String' name='PyUnicode_AsUTF8String'/>
<function_alias original='PyUnicodeUCS2_AsUnicode' name='PyUnicode_AsUnicode'/>
<function_alias original='PyUnicodeUCS2_AsUnicodeEscapeString' name='PyUnicode_AsUnicodeEscapeString'/>
<function_alias original='PyUnicodeUCS2_AsWideChar' name='PyUnicode_AsWideChar'/>
<function_alias original='PyUnicodeUCS2_ClearFreelist' name='PyUnicode_ClearFreeList'/>
<function_alias original='PyUnicodeUCS2_Compare' name='PyUnicode_Compare'/>
<function_alias original='PyUnicodeUCS2_Concat' name='PyUnicode_Concat'/>
<function_alias original='PyUnicodeUCS2_Contains' name='PyUnicode_Contains'/>
<function_alias original='PyUnicodeUCS2_Count' name='PyUnicode_Count'/>
<function_alias original='PyUnicodeUCS2_Decode' name='PyUnicode_Decode'/>
<function_alias original='PyUnicodeUCS2_DecodeASCII' name='PyUnicode_DecodeASCII'/>
<function_alias original='PyUnicodeUCS2_DecodeCharmap' name='PyUnicode_DecodeCharmap'/>
<function_alias original='PyUnicodeUCS2_DecodeLatin1' name='PyUnicode_DecodeLatin1'/>
<function_alias original='PyUnicodeUCS2_DecodeRawUnicodeEscape' name='PyUnicode_DecodeRawUnicodeEscape'/>
<function_alias original='PyUnicodeUCS2_DecodeUTF16' name='PyUnicode_DecodeUTF16'/>
<function_alias original='PyUnicodeUCS2_DecodeUTF16Stateful' name='PyUnicode_DecodeUTF16Stateful'/>
<function_alias original='PyUnicodeUCS2_DecodeUTF32' name='PyUnicode_DecodeUTF32'/>
<function_alias original='PyUnicodeUCS2_DecodeUTF32Stateful' name='PyUnicode_DecodeUTF32Stateful'/>
<function_alias original='PyUnicodeUCS2_DecodeUTF8' name='PyUnicode_DecodeUTF8'/>
<function_alias original='PyUnicodeUCS2_DecodeUTF8Stateful' name='PyUnicode_DecodeUTF8Stateful'/>
<function_alias original='PyUnicodeUCS2_DecodeUnicodeEscape' name='PyUnicode_DecodeUnicodeEscape'/>
<function_alias original='PyUnicodeUCS2_Encode' name='PyUnicode_Encode'/>
<function_alias original='PyUnicodeUCS2_EncodeASCII' name='PyUnicode_EncodeASCII'/>
<function_alias original='PyUnicodeUCS2_EncodeCharmap' name='PyUnicode_EncodeCharmap'/>
<function_alias original='PyUnicodeUCS2_EncodeDecimal' name='PyUnicode_EncodeDecimal'/>
<function_alias original='PyUnicodeUCS2_EncodeLatin1' name='PyUnicode_EncodeLatin1'/>
<function_alias original='PyUnicodeUCS2_EncodeRawUnicodeEscape' name='PyUnicode_EncodeRawUnicodeEscape'/>
<function_alias original='PyUnicodeUCS2_EncodeUTF16' name='PyUnicode_EncodeUTF16'/>
<function_alias original='PyUnicodeUCS2_EncodeUTF32' name='PyUnicode_EncodeUTF32'/>
<function_alias original='PyUnicodeUCS2_EncodeUTF8' name='PyUnicode_EncodeUTF8'/>
<function_alias original='PyUnicodeUCS2_EncodeUnicodeEscape' name='PyUnicode_EncodeUnicodeEscape'/>
<function_alias original='PyUnicodeUCS2_Find' name='PyUnicode_Find'/>
<function_alias original='PyUnicodeUCS2_Format' name='PyUnicode_Format'/>
<function_alias original='PyUnicodeUCS2_FromEncodedObject' name='PyUnicode_FromEncodedObject'/>
<function_alias original='PyUnicodeUCS2_FromFormat' name='PyUnicode_FromFormat'/>
<function_alias original='PyUnicodeUCS2_FromFormatV' name='PyUnicode_FromFormatV'/>
<function_alias original='PyUnicodeUCS2_FromObject' name='PyUnicode_FromObject'/>
<function_alias original='PyUnicodeUCS2_FromOrdinal' name='PyUnicode_FromOrdinal'/>
<function_alias original='PyUnicodeUCS2_FromString' name='PyUnicode_FromString'/>
<function_alias original='PyUnicodeUCS2_FromStringAndSize' name='PyUnicode_FromStringAndSize'/>
<function_alias original='PyUnicodeUCS2_FromUnicode' name='PyUnicode_FromUnicode'/>
<function_alias original='PyUnicodeUCS2_FromWideChar' name='PyUnicode_FromWideChar'/>
<function_alias original='PyUnicodeUCS2_GetDefaultEncoding' name='PyUnicode_GetDefaultEncoding'/>
<function_alias original='PyUnicodeUCS2_GetMax' name='PyUnicode_GetMax'/>
<function_alias original='PyUnicodeUCS2_GetSize' name='PyUnicode_GetSize'/>
<function_alias original='PyUnicodeUCS2_Join' name='PyUnicode_Join'/>
<function_alias original='PyUnicodeUCS2_Partition' name='PyUnicode_Partition'/>
<function_alias original='PyUnicodeUCS2_RPartition' name='PyUnicode_RPartition'/>
<function_alias original='PyUnicodeUCS2_RSplit' name='PyUnicode_RSplit'/>
<function_alias original='PyUnicodeUCS2_Replace' name='PyUnicode_Replace'/>
<function_alias original='PyUnicodeUCS2_Resize' name='PyUnicode_Resize'/>
<function_alias original='PyUnicodeUCS2_RichCompare' name='PyUnicode_RichCompare'/>
<function_alias original='PyUnicodeUCS2_SetDefaultEncoding' name='PyUnicode_SetDefaultEncoding'/>
<function_alias original='PyUnicodeUCS2_Split' name='PyUnicode_Split'/>
<function_alias original='PyUnicodeUCS2_Splitlines' name='PyUnicode_Splitlines'/>
<function_alias original='PyUnicodeUCS2_Tailmatch' name='PyUnicode_Tailmatch'/>
<function_alias original='PyUnicodeUCS2_Translate' name='PyUnicode_Translate'/>
<function_alias original='PyUnicodeUCS2_TranslateCharmap' name='PyUnicode_TranslateCharmap'/>
<function_alias original='Py_InitModule4_64' name='Py_InitModule4'/>
<function_alias original='memcpy' name='Py_MEMCPY'/>
<function_alias original='_PyString_Eq' name='_PyBytes_Eq'/>
<function_alias original='_PyString_FormatLong' name='_PyBytes_FormatLong'/>
<function_alias original='_PyString_InsertThousandsGrouping' name='_PyBytes_InsertThousandsGrouping'/>
<function_alias original='_PyString_Join' name='_PyBytes_Join'/>
<function_alias original='_PyString_Resize' name='_PyBytes_Resize'/>
<function_alias original='PyLong_AsSsize_t' name='_PyLong_AsSsize_t'/>
<function_alias original='PyLong_FromSize_t' name='_PyLong_FromSize_t'/>
<function_alias original='PyLong_FromSsize_t' name='_PyLong_FromSsize_t'/>
<function_alias original='PyObject_Free' name='_PyObject_Del'/>
<function_alias original='PyObject_GC_Del' name='_PyObject_GC_Del'/>
<function_alias original='_PyUnicodeUCS2_AsDefaultEncodedString' name='_PyUnicode_AsDefaultEncodedString'/>
<function_alias original='_PyUnicodeUCS2_IsAlpha' name='_PyUnicode_IsAlpha'/>
<function_alias original='_PyUnicodeUCS2_IsDecimalDigit' name='_PyUnicode_IsDecimalDigit'/>
<function_alias original='_PyUnicodeUCS2_IsDigit' name='_PyUnicode_IsDigit'/>
<function_alias original='_PyUnicodeUCS2_IsLinebreak' name='_PyUnicode_IsLinebreak'/>
<function_alias original='_PyUnicodeUCS2_IsLowercase' name='_PyUnicode_IsLowercase'/>
<function_alias original='_PyUnicodeUCS2_IsNumeric' name='_PyUnicode_IsNumeric'/>
<function_alias original='_PyUnicodeUCS2_IsTitlecase' name='_PyUnicode_IsTitlecase'/>
<function_alias original='_PyUnicodeUCS2_IsUppercase' name='_PyUnicode_IsUppercase'/>
<function_alias original='_PyUnicodeUCS2_IsWhitespace' name='_PyUnicode_IsWhitespace'/>
<function_alias original='_PyUnicodeUCS2_ToDecimalDigit' name='_PyUnicode_ToDecimalDigit'/>
<function_alias original='_PyUnicodeUCS2_ToDigit' name='_PyUnicode_ToDigit'/>
<function_alias original='_PyUnicodeUCS2_ToLowercase' name='_PyUnicode_ToLowercase'/>
<function_alias original='_PyUnicodeUCS2_ToNumeric' name='_PyUnicode_ToNumeric'/>
<function_alias original='_PyUnicodeUCS2_ToTitlecase' name='_PyUnicode_ToTitlecase'/>
<function_alias original='_PyUnicodeUCS2_ToUppercase' name='_PyUnicode_ToUppercase'/>
<function_alias original='_Py_c_abs' name='c_abs'/>
<function_alias original='_Py_c_diff' name='c_diff'/>
<function_alias original='_Py_c_neg' name='c_neg'/>
<function_alias original='_Py_c_pow' name='c_pow'/>
<function_alias original='_Py_c_prod' name='c_prod'/>
<function_alias original='_Py_c_quot' name='c_quot'/>
<function_alias original='_Py_c_sum' name='c_sum'/>
</signatures>
